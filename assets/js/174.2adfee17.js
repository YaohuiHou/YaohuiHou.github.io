(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{403:function(t,a,s){"use strict";s.r(a);var n=s(1),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"typeof和数据类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof和数据类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" typeof和数据类型转换")]),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),s("p",[s("strong",[t._v("变量的数据类型转换")]),t._v("：将一种数据类型转换为另外一种数据类型。")]),s("p",[t._v("通常有三种形式的类型转换：")]),s("ul",[s("li",[s("p",[t._v("转换为字符串类型")])]),s("li",[s("p",[t._v("转换为数字型")])]),s("li",[s("p",[t._v("转换为布尔型")])])]),s("p",[t._v("你会专门把某个数据类型转换成 null 或者 undefined 吗？不会，因为这样做，没有意义。")]),s("h2",{attrs:{id:"typeof-运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typeof-运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" typeof 运算符")]),s("blockquote",[s("p",[t._v("我们先来讲一下 typeof，再讲类型转换。")])]),s("p",[s("code",[t._v("typeof()")]),t._v("表示“"),s("strong",[t._v("获取变量的数据类型")]),t._v("”，返回的是小写，语法为：（两种写法都可以）")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 写法1")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" 变量"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 写法2")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("变量"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("typeof 这个运算符的返回结果就是变量的类型。那返回结果的类型是什么呢？是字符串。")]),s("p",[s("strong",[t._v("返回结果")]),t._v("：")]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("typeof 的代码写法")]),s("th",{staticStyle:{"text-align":"center"}},[t._v("返回结果")])])]),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof 数字")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("number")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof 字符串")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof 布尔型")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof 对象")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("object")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof 方法")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("function")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof null")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("object")])]),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("typeof undefined")]),s("td",{staticStyle:{"text-align":"center"}},[t._v("undefined")])])])]),s("p",[t._v("备注 1：为啥 "),s("code",[t._v("typeof null")]),t._v("的返回值也是 object 呢？因为 null 代表的是"),s("strong",[t._v("空对象")]),t._v("。")]),s("p",[t._v("备注 2："),s("code",[t._v("typeof NaN")]),t._v("的返回值是 number，上一篇文章中讲过，NaN 是一个特殊的数字。")]),s("p",[s("strong",[t._v("返回结果举例")]),t._v("：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 空数组的打印结果：object")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 空对象的打印结果：object")]),t._v("\n")])]),s("p",[t._v("代码解释：这里的空数组"),s("code",[t._v("[]")]),t._v("、空对象"),s("code",[t._v("{}")]),t._v(" ，为啥他们在使用 typeof 时，返回值也是 "),s("code",[t._v("object")]),t._v("呢？因为这里的 返回结果"),s("code",[t._v("object")]),t._v("指的是"),s("strong",[t._v("引用数据类型")]),t._v("。空数组、空对象都是"),s("strong",[t._v("引用数据类型 Object")]),t._v("。")]),s("h2",{attrs:{id:"变量的类型转换的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的类型转换的分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量的类型转换的分类")]),s("p",[t._v("类型转换分为两种：显示类型转换、隐式类型转换。")]),s("h3",{attrs:{id:"显示类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显示类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 显示类型转换")]),s("ul",[s("li",[s("p",[t._v("toString()")])]),s("li",[s("p",[t._v("String()")])]),s("li",[s("p",[t._v("Number()")])]),s("li",[s("p",[t._v("parseInt(string)")])]),s("li",[s("p",[t._v("parseFloat(string)")])]),s("li",[s("p",[t._v("Boolean()")])])]),s("h3",{attrs:{id:"隐式类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式类型转换")]),s("ul",[s("li",[s("p",[t._v("isNaN ()")])]),s("li",[s("p",[t._v("自增/自减运算符："),s("code",[t._v("++")]),t._v("、"),s("code",[t._v("—-")])])]),s("li",[s("p",[t._v("正号/负号："),s("code",[t._v("+a")]),t._v("、"),s("code",[t._v("-a")])])]),s("li",[s("p",[t._v("加号："),s("code",[t._v("+")])])]),s("li",[s("p",[t._v("运算符："),s("code",[t._v("-")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("/")])])])]),s("h3",{attrs:{id:"隐式类型转换（特殊）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换（特殊）","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式类型转换（特殊）")]),s("ul",[s("li",[s("p",[t._v("逻辑运算符："),s("code",[t._v("&&")]),t._v("、"),s("code",[t._v("||")]),t._v("、"),s("code",[t._v("！")]),t._v(" 。非布尔值进行"),s("strong",[t._v("与或")]),t._v("运算时，会先将其转换为布尔值，然后再运算，但运算结果是"),s("strong",[t._v("原值")]),t._v("。具体可以看下一篇文章《运算符》。")])]),s("li",[s("p",[t._v("关系运算符："),s("code",[t._v("<")]),t._v("、"),s("code",[t._v(">")]),s("code",[t._v("<=")]),s("code",[t._v(">=")]),t._v("等。关系运算符，得到的运算结果都是布尔值：要么是true，要么是false。具体可以看下一篇文章《运算符》。")])])]),s("p",[t._v("针对上面这两种类型转换，这篇文章来详细介绍。")]),s("h2",{attrs:{id:"其他的简单类型-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他的简单类型-string","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他的简单类型 --\x3e String")]),s("h3",{attrs:{id:"方法一（隐式类型转换）：字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法一（隐式类型转换）：字符串拼接","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法一（隐式类型转换）：字符串拼接")]),s("p",[t._v('格式：变量+"" 或者 变量+"abc"')]),s("p",[t._v("举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("123")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// Number 类型")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("''")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 转换成 String 类型")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'haha'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 转换成 String 类型")]),t._v("\n")])]),s("p",[t._v("上面的例子中，打印的结果，都是字符串类型的数据。实际上内部是调用的 String() 函数。也就是说，"),s("code",[t._v('c = c + ""')]),t._v(" 等价于 "),s("code",[t._v("c = String(c)")]),t._v("。")]),s("h3",{attrs:{id:"方法二：调用-tostring-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法二：调用-tostring-方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法二：调用 toString()方法")]),s("p",[t._v("语法：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("变量"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toString")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("【重要】该方法"),s("strong",[t._v("不会影响到原变量")]),t._v("，它会将转换的结果返回。当然我们还可以直接写成"),s("code",[t._v("a = a.toString()")]),t._v("，这样的话，就是直接修改原变量。")]),s("p",[t._v("注意：null 和 undefined 这两个值没有 toString()方法，所以它们不能用方法二。如果调用，会报错。")]),s("p",[t._v("另外，Number 类型的变量，在调用 toString()时，可以在方法中传递一个整数作为参数。此时它将会把数字转换为指定的进制，如果不指定则默认转换为 10 进制。例如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("255")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("//对于Number调用toString()时可以在方法中传递一个整数作为参数")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//此时它将会把数字转换为指定的进制,如果不指定则默认转换为10进制")]),t._v("\na "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toString")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 转换为二进制")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 11111111")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// string")]),t._v("\n")])]),s("h3",{attrs:{id:"方法三（强制转换）：使用-string-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法三（强制转换）：使用-string-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法三（强制转换）：使用 String()函数")]),s("p",[t._v("语法：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("String")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("变量"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("p",[t._v("使用 String()函数做强制类型转换时：")]),s("ul",[s("li",[s("p",[t._v("对于 Number 和 Boolean 而言，本质上就是调用 toString()方法。")])]),s("li",[s("p",[t._v('但是对于 null 和 undefined，则不会调用 toString()方法。它会将 null 直接转换为 "null"。将 undefined 直接转换为 "undefined"。')])])]),s("h3",{attrs:{id:"prompt-：用户的输入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prompt-：用户的输入","aria-hidden":"true"}},[t._v("#")]),t._v(" prompt()：用户的输入")]),s("p",[t._v("我们在 JS 基础的第 01 篇里，就讲过，"),s("code",[t._v("prompt()")]),t._v("就是专门用来弹出能够让用户输入的对话框。重要的是：用户不管输入什么，都当字符串处理。")]),s("h2",{attrs:{id:"其他的数据类型-number-【重要】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他的数据类型-number-【重要】","aria-hidden":"true"}},[t._v("#")]),t._v(" 其他的数据类型 --\x3e Number 【重要】")]),s("h3",{attrs:{id:"使用-number-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-number-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Number() 函数")]),s("p",[s("strong",[t._v("情况一：字符串 --\x3e 数字")])]),s("ul",[s("li",[s("p",[t._v("1.如果字符串中是纯数字，则直接将其转换为数字。")])]),s("li",[s("p",[t._v("2.只要字符串中包含了非数字的内容（"),s("code",[t._v("小数点")]),t._v("按数字来算），则转换为 NaN。")])]),s("li",[s("p",[t._v("3.如果字符串是一个空串或者是一个全是空格的字符串，则转换为 0。")])])]),s("p",[s("strong",[t._v("情况二：布尔 --\x3e 数字")])]),s("ul",[s("li",[s("p",[t._v("true 转成 1")])]),s("li",[s("p",[t._v("false 转成 0")])])]),s("p",[s("strong",[t._v("情况三：null --\x3e 数字")])]),s("ul",[s("li",[t._v("结果为：0")])]),s("p",[s("strong",[t._v("情况四：undefined --\x3e 数字")])]),s("ul",[s("li",[t._v("结果为：NaN")])]),s("p",[t._v("补充：怎么理解这里的 "),s("strong",[t._v("NaN")]),t._v(" 呢？可以这样理解，使用 Number() 函数之后，"),s("strong",[t._v("如果无法转换为数字，就会转换为 NaN")]),t._v("。")]),s("h3",{attrs:{id:"使用-parseint-函数：字符串-整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-parseint-函数：字符串-整数","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 parseInt()函数：字符串 -> 整数")]),s("p",[s("strong",[t._v("parseInt()的作用是将字符串中的有效的整数内容转为数字")]),t._v("。parse 表示“转换”，Int 表示“整数”（注意"),s("code",[t._v("Int")]),t._v("的拼写）。例如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"5"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("得到的结果是数字 5。")]),s("p",[t._v("parseInt()的转换情况如下。")]),s("p",[s("strong",[t._v("情况一：字符串 --\x3e 数字")])]),s("ul",[s("li",[s("p",[t._v("1."),s("strong",[t._v("只保留字符串最开头的数字")]),t._v("，后面的中文自动消失。")])]),s("li",[s("p",[t._v("2.如果字符串不是以数字开头，则转换为 NaN。")])]),s("li",[s("p",[t._v("3.如果字符串是一个空串或者是一个全是空格的字符串，转换时会报错。")])])]),s("p",[s("strong",[t._v("情况二：Boolean --\x3e 数字")])]),s("ul",[s("li",[t._v("结果为：NaN")])]),s("p",[s("strong",[t._v("情况三：Null --\x3e 数字")])]),s("ul",[s("li",[t._v("结果为：NaN")])]),s("p",[s("strong",[t._v("情况四：Undefined --\x3e 数字")])]),s("ul",[s("li",[t._v("结果为：NaN")])]),s("p",[t._v("Number() 函数和 parseInt() 函数的区别：")]),s("p",[t._v("就拿"),s("code",[t._v("Number(true)")]),t._v(" 和 "),s("code",[t._v("parseInt(true)/parseFloat(true)")]),t._v("来举例，二者在使用时，是有区别的：")]),s("ul",[s("li",[s("p",[t._v("Number(true) ：千方百计地想转换为数字。")])]),s("li",[s("p",[t._v("parseInt(true)/parseFloat(true) ：先转为字符串，再提取出最前面的数字部分；没提取出来，那就返回 NaN。")])])]),s("p",[s("strong",[t._v("parseInt()具有以下特性")]),t._v("：")]),s("p",[t._v("（1）"),s("strong",[t._v("只保留字符串最开头的数字")]),t._v("，后面的中文自动消失。例如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"2017在公众号上写了6篇文章"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//打印结果：2017")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"2017.01在公众号上写了6篇文章"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//打印结果仍是：2017   （说明只会取整数）")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"aaa2017.01在公众号上写了6篇文章"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//打印结果：NaN （因为不是以数字开头）")]),t._v("\n")])]),s("p",[t._v("（2）如果对"),s("strong",[t._v("非 String")]),t._v("使用 parseInt()或 parseFloat()，它会"),s("strong",[t._v("先将其转换为 String")]),t._v(" 然后再操作。【重要】")]),s("p",[t._v("比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("168.23")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v('//打印结果：168  （因为是先将c转为字符串"168.23"，然后然后再操作）')]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v('//打印结果：NaN （因为是先将a转为字符串"true"，然后然后再操作）')]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v('//打印结果：NaN  （因为是先将b转为字符串"null"，然后然后再操作）')]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" undefined"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v('//打印结果：NaN  （因为是先将b转为字符串"undefined"，然后然后再操作）')]),t._v("\n")])]),s("p",[t._v("（3）自动带有截断小数的功能："),s("strong",[t._v("取整，不四舍五入")]),t._v("。")]),s("p",[t._v("例 1：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("5.8")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("4.7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("打印结果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("9\n")])]),s("p",[t._v("例 2：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("5.8")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("4.7")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("打印结果：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token number"}},[t._v("10")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("（4）带两个参数时，表示在转换时，包含了进制转换。")]),s("p",[t._v("代码举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'110'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("16")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 【重要】将 a 当成 十六进制 来看待，转换成 十进制 的 num")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("打印结果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("272\n")])]),s("p",[t._v("如果你对打印结果感到震惊，请仔细看上面的代码注释。就是说，无论 parseInt() 里面的进制参数是多少，最终的转换结果是十进制。")]),s("p",[t._v("我们继续来看下面的代码，打印结果是多少。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'5'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 将 a 当成 二进制 来看待，转换成 十进制 的 num")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：NaN。因为 二进制中没有 5 这个数，转换失败。")]),t._v("\n")])]),s("h3",{attrs:{id:"parsefloat-函数：字符串-浮点数（小数）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat-函数：字符串-浮点数（小数）","aria-hidden":"true"}},[t._v("#")]),t._v(" parseFloat()函数：字符串 --\x3e 浮点数（小数）")]),s("p",[t._v("parseFloat()的作用是：将字符串转换为"),s("strong",[t._v("浮点数")]),t._v("。")]),s("p",[t._v("parseFloat()和 parseInt()的作用类似，不同的是，parseFloat()可以获得有效的小数部分。")]),s("p",[t._v("代码举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'123.456.789px'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("parseFloat")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：123.456")]),t._v("\n")])]),s("p",[t._v("parseFloat() 的几个特性，可以参照 parseInt()。")]),s("h2",{attrs:{id:"转换为-boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换为-boolean","aria-hidden":"true"}},[t._v("#")]),t._v(" 转换为 Boolean")]),s("p",[t._v("将其他的数据类型转换为 Boolean，可以使用 Boolean()函数。情况如下：")]),s("ul",[s("li",[s("p",[t._v("情况一：数字 --\x3e 布尔。除了 0 和 NaN，其余的都是 true。也就是说，"),s("code",[t._v("Boolean(NaN)")]),t._v("的结果是 false。")])]),s("li",[s("p",[t._v("情况二：字符串 ---\x3e 布尔。除了空串，其余的都是 true。全是空格的字符串，转换结果也是 true。字符串"),s("code",[t._v("'0'")]),t._v("的转换结果也是 true。")])]),s("li",[s("p",[t._v("情况三：null 和 undefined 都会转换为 false。")])]),s("li",[s("p",[t._v("情况四：引用数据类型会转换为 true。注意，空数组"),s("code",[t._v("[]")]),t._v("和空对象"),s("code",[t._v("{}")]),t._v("，转换结果也是 true，这个一点，很多人都不知道。")])])]),s("p",[t._v("PS：转换为 Boolean 的这几种情况，"),s("strong",[t._v("很重要")]),t._v("，开发中会经常用到。")]),s("h2",{attrs:{id:"知识补充：其他进制的数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识补充：其他进制的数字","aria-hidden":"true"}},[t._v("#")]),t._v(" 知识补充：其他进制的数字")]),s("ul",[s("li",[s("p",[t._v("16 进制的数字，以"),s("code",[t._v("0x")]),t._v("开头")])]),s("li",[s("p",[t._v("8 进制的数字，以"),s("code",[t._v("0")]),t._v("开头")])]),s("li",[s("p",[t._v("2 进制的数字，"),s("code",[t._v("0b")]),t._v("开头（不是所有的浏览器都支持：chrome 和火狐支持，IE 不支持）")])])]),s("p",[t._v("比如"),s("code",[t._v("070")]),t._v("这个字符串，如果我调用 parseInt()转成数字时，有些浏览器会当成 8 进制解析，有些会当成 10 进制解析。")]),s("p",[t._v("所以，比较建议的做法是：可以在 parseInt()中传递第二个参数，来指定当前数字的进制。例如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"070"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("8")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//将 070 当成八进制来看待，转换结果为十进制。")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：56。这个地方要好好理解。")]),t._v("\n")])]),s("h2",{attrs:{id:"隐式类型转换-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式类型转换-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式类型转换")]),s("p",[t._v("重点："),s("strong",[t._v("隐式类型转换，内部调用的都是显式类型的方法")]),t._v("。下面来详细介绍。")]),s("h3",{attrs:{id:"isnan-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#isnan-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" isNaN() 函数")]),s("p",[t._v("语法：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("解释：判断指定的参数是否为 NaN（非数字类型），返回结果为 Boolean 类型。也就是说："),s("strong",[t._v("任何不能被转换为数值的参数，都会让这个函数返回 true")]),t._v("。")]),s("p",[s("strong",[t._v("执行过程")]),t._v("：")]),s("p",[t._v("（1）先调用"),s("code",[t._v("Number(参数)")]),t._v("函数；")]),s("p",[t._v("（2）然后将"),s("code",[t._v("Number(参数)")]),t._v("的返回结果和"),s("code",[t._v("NaN")]),t._v("进行比较。")]),s("p",[t._v("代码举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'123'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 返回结果：false。")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 返回结果：true。因为 Number('abc') 的返回结果是 NaN")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 返回结果：false")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("undefined"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 返回结果：true")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("NaN")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 返回结果：true")]),t._v("\n")])]),s("h3",{attrs:{id:"自增-自减运算符：-、—"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自增-自减运算符：-、—","aria-hidden":"true"}},[t._v("#")]),t._v(" 自增/自减运算符："),s("code",[t._v("++")]),t._v("、"),s("code",[t._v("—-")])]),s("p",[s("strong",[t._v("举例 1")]),t._v("：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"666"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果： number")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：667")]),t._v("\n")])]),s("p",[t._v("执行过程：")]),s("p",[t._v("（1）先调用"),s("code",[t._v("Number(参数)")]),t._v("函数；")]),s("p",[t._v("（2）然后将"),s("code",[t._v("Number(参数)")]),t._v("的返回结果进行 加 1 操作。")]),s("p",[s("strong",[t._v("举例 2")]),t._v("：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{attrs:{class:"token operator"}},[t._v("++")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：number")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：NaN。因为 Number('abc')的结果为 NaN，再自增后，结果依然是 NaN")]),t._v("\n")])]),s("h3",{attrs:{id:"正号-负号：-a、-a"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正号-负号：-a、-a","aria-hidden":"true"}},[t._v("#")]),t._v(" 正号/负号："),s("code",[t._v("+a")]),t._v("、"),s("code",[t._v("-a")])]),s("blockquote",[s("p",[t._v("注意，这里说的是正号/负号，不是加号/减号。")])]),s("p",[t._v("任何值做"),s("code",[t._v("+a")]),t._v("、"),s("code",[t._v("-a")]),t._v("、"),s("code",[t._v("/a")]),t._v("运算时，运算结果都会自动转换为 Number 类型。 内部调用的是 Number() 函数。")]),s("p",[s("strong",[t._v("举例")]),t._v("：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'666'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：string。说明 a 的数据类型保持不变。")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：666")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：number。说明 b 的数据类型发生了变化。")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：666")]),t._v("\n")])]),s("h3",{attrs:{id:"加号："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加号：","aria-hidden":"true"}},[t._v("#")]),t._v(" 加号："),s("code",[t._v("+")])]),s("p",[s("strong",[t._v("情况一")]),t._v("：字符串 + 数字")]),s("ul",[s("li",[t._v("当加号的两边，只要有一个是字符串的时候，就会调用 String() 函数将数字转为字符串，然后再计算。导致最终的运算结果是字符串。")])]),s("p",[s("strong",[t._v("情况二")]),t._v("：Boolean + 数字")]),s("ul",[s("li",[t._v("Boolean 型和数字型相加时， true 按 1 来算 ，false 按 0 来算。这里其实是先调 Number() 函数，将 Boolean 类型转换为 Number类型，然后再和 数字相加。")])]),s("p",[s("strong",[t._v("情况三")]),t._v("： null + 数字")]),s("ul",[s("li",[t._v("等价于：0 + 数字")])]),s("p",[s("strong",[t._v("情况四")]),t._v("： undefined + 数字")]),s("ul",[s("li",[t._v("计算结果：NaN")])]),s("h3",{attrs:{id:"运算符：-、-、"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符：-、-、","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算符："),s("code",[t._v("-")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("/")])]),s("p",[t._v("1、任何非 Number 类型的值做"),s("code",[t._v("-")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("/")]),t._v("运算时，会将这些值转换为Number然后再运算(内部调用的是 Number() 函数），运算结果是  Number 类型。（注："),s("code",[t._v("任何值 + 字符串")]),t._v("是特例，运算结果是字符串）")]),s("p",[t._v("比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    result1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// 2 = 1+ 1")]),t._v("\n\n    result2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("false")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 1 = 1+ 0")]),t._v("\n\n    result3 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 1 = 1+ 0")]),t._v("\n\n    result4 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 99")]),t._v("\n")])]),s("p",[t._v("2、任何的值和字符串做加法运算，都会先转换为字符串，然后再做拼串操作。")]),s("p",[t._v("比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    result1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'3'")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// 33")]),t._v("\n\n    result2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 123")]),t._v("\n")])]),s("p",[t._v("3、任何值和NaN做运算的结果都是NaN。")]),s("h2",{attrs:{id:"我的公众号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号","aria-hidden":"true"}},[t._v("#")]),t._v(" 我的公众号")]),s("p",[t._v("想学习"),s("strong",[t._v("代码之外的技能")]),t._v("？不妨关注我的微信公众号："),s("strong",[t._v("千古壹号")]),t._v("（id："),s("code",[t._v("qianguyihao")]),t._v("）。")]),s("p",[t._v("扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：")]),s("p",[s("img",{attrs:{src:"http://img.smyhvae.com/20200101.png",alt:""}})])])}],!1,null,null,null);a.default=o.exports}}]);