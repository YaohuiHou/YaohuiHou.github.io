(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{541:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"网络服务-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络服务-http","aria-hidden":"true"}},[t._v("#")]),t._v(" 网络服务-http")]),a("h2",{attrs:{id:"http模块概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http模块概览","aria-hidden":"true"}},[t._v("#")]),t._v(" http模块概览")]),a("p",[t._v("大多数nodejs开发者都是冲着开发web server的目的选择了nodejs。正如官网所展示的，借助http模块，可以几行代码就搞定一个超迷你的web server。")]),a("p",[t._v("在nodejs中，"),a("code",[t._v("http")]),t._v("可以说是最核心的模块，同时也是比较复杂的一个模块。上手很简单，但一旦深入学习，不少初学者就会觉得头疼，不知从何入手。")]),a("p",[t._v("本文先从一个简单的例子出发，引出"),a("code",[t._v("http")]),t._v("模块最核心的四个实例。看完本文，应该就能够对http模块有个整体的认识。")]),a("h2",{attrs:{id:"一个简单的例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一个简单的例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个简单的例子")]),a("p",[t._v("在下面的例子中，我们创建了1个web服务器、1个http客户端")]),a("ul",[a("li",[t._v("服务器server：接收来自客户端的请求，并将客户端请求的地址返回给客户端。")]),a("li",[t._v("客户端client：向服务器发起请求，并将服务器返回的内容打印到控制台。")])]),a("p",[t._v("代码如下所示，只有几行，但包含了不少信息量。下一小节会进行简单介绍。")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" http "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'http'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// http server 例子")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" server "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createServer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serverReq"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" serverRes"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" serverReq"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    serverRes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("end")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'您访问的地址是：'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" url "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nserver"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("listen")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("3000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// http client 例子")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" client "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'http://127.0.0.1:3000'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clientRes"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    clientRes"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("pipe")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),a("h2",{attrs:{id:"例子解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例子解释","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子解释")]),a("p",[t._v("在上面这个简单的例子里，涉及了4个实例。大部分时候，serverReq、serverRes 才是主角。")]),a("ul",[a("li",[t._v("server：http.Server实例，用来提供服务，处理客户端的请求。")]),a("li",[t._v("client：http.ClientReques实例，用来向服务端发起请求。")]),a("li",[t._v("serverReq/clientRes：其实都是 http.IncomingMessage实。serverReq 用来获取客户端请求的相关信息，如request header；而clientRes用来获取服务端返回的相关信息，比如response header。")]),a("li",[t._v("serverRes：http.ServerResponse实例")])]),a("h2",{attrs:{id:"关于http-incomingmessage、http-serverresponse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于http-incomingmessage、http-serverresponse","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于http.IncomingMessage、http.ServerResponse")]),a("p",[t._v("先讲下 http.ServerResponse 实例。作用很明确，服务端通过http.ServerResponse 实例，来个请求方发送数据。包括发送响应表头，发送响应主体等。")]),a("p",[t._v("接下来是 http.IncomingMessage 实例，由于在 server、client 都出现了，初学者难免有点迷茫。它的作用是")]),a("p",[t._v("在server端：获取请求发送方的信息，比如请求方法、路径、传递的数据等。\n在client端：获取 server 端发送过来的信息，比如请求方法、路径、传递的数据等。")]),a("p",[t._v("http.IncomingMessage实例 有三个属性需要注意：method、statusCode、statusMessage。")]),a("ul",[a("li",[t._v("method：只在 server 端的实例有（也就是 serverReq.method）")]),a("li",[t._v("statusCode/statusMessage：只在 client 端 的实例有（也就是 clientRes.method）")])]),a("h2",{attrs:{id:"关于继承与扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于继承与扩展","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于继承与扩展")]),a("h3",{attrs:{id:"http-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-server","aria-hidden":"true"}},[t._v("#")]),t._v(" http.Server")]),a("ul",[a("li",[t._v("http.Server 继承了 net.Server （于是顺带需要学一下 net.Server 的API、属性、相关事件）")]),a("li",[t._v("net.createServer(fn)，回调中的 "),a("code",[t._v("socket")]),t._v(" 是个双工的stream接口，也就是说，读取发送方信息、向发送方发送信息都靠他。")])]),a("p",[t._v("备注：socket的客户端、服务端是相对的概念，所以其实 net.Server 内部也是用了 net.Socket（不负责任猜想）")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 参考：https://cnodejs.org/topic/4fb1c1fd1975fe1e1310490b")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" net "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("require")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'net'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8989")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("HOST")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" server "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createServer")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Connected: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remoteAddress "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("':'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remotePort"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("on")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'data'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'DATA '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remoteAddress "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("': '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Data is: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("write")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Data from you is  \"'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" data "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'\"'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("on")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'close'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'CLOSED: '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v("\n            socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remoteAddress "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" socket"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remotePort"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nserver"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("listen")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token constant"}},[t._v("PORT")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token constant"}},[t._v("HOST")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server "),a("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("net"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Server")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),a("h3",{attrs:{id:"http-clientrequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-clientrequest","aria-hidden":"true"}},[t._v("#")]),t._v(" http.ClientRequest")]),a("p",[t._v("http.ClientRequest 内部创建了一个socket来发起请求，"),a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/lib/_http_client.js#L174",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码如下")]),t._v("。")]),a("p",[t._v("当你调用 http.request(options) 时，内部是这样的")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("self"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("onSocket")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("net"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("createConnection")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),a("h3",{attrs:{id:"http-serverresponse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-serverresponse","aria-hidden":"true"}},[t._v("#")]),t._v(" http.ServerResponse")]),a("ul",[a("li",[t._v("实现了 Writable Stream interface，内部也是通过socket来发送信息。")])]),a("h3",{attrs:{id:"http-incomingmessage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-incomingmessage","aria-hidden":"true"}},[t._v("#")]),t._v(" http.IncomingMessage")]),a("ul",[a("li",[t._v("实现了 Readable Stream interface，参考"),a("a",{attrs:{href:"https://github.com/nodejs/node/blob/master/lib/_http_incoming.js#L62",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里")])]),a("li",[t._v("req.socket --\x3e 获得跟这次连接相关的socket")])])])}],!1,null,null,null);s.default=e.exports}}]);