(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{415:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"变量的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量的数据类型")]),s("h2",{attrs:{id:"变量的数据类型-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的数据类型-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量的数据类型")]),s("h3",{attrs:{id:"为什么需要数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么需要数据类型")]),s("p",[t._v("在计算机中，不同的数据所需占用的存储空间不同，为了充分利用存储空间，于是定义了不同的数据类型。而且，不同的数据类型，寓意也不同。")]),s("p",[t._v("我们都知道，无论这个变量是字符串类型，还是数字类型，我们都可以直接用 "),s("code",[t._v("var")]),t._v(" 去定义它。比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'hello word'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("123")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("为什么可以这样做呢？这是因为：JavaScript 是一种「弱类型语言」，或者说是一种「动态语言」，这意味着不需要提前声明变量的类型，在程序运行过程中，类型会自动被确定。")]),s("p",[s("strong",[t._v("JS 的变量数据类型，是在程序运行的过程中，根据等号右边的值来确定的")]),t._v("。而且，变量的数据类型是可以变化的。比如说：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'qianguyihao'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nname "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("123")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 强制将变量 name 修改为 数字类型")]),t._v("\n")])]),s("h3",{attrs:{id:"js中一共有六种数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js中一共有六种数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" JS中一共有六种数据类型")]),s("ul",[s("li",[s("p",[s("strong",[t._v("基本数据类型（值类型）")]),t._v("：String 字符串、Number 数值、Boolean 布尔值、Null 空值、Undefined 未定义。")])]),s("li",[s("p",[s("strong",[t._v("引用数据类型（引用类型）")]),t._v("：Object 对象。")])])]),s("p",[t._v("注意：内置对象 Function、Array、Date、RegExp、Error等都是属于 Object 类型。也就是说，除了那五种基本数据类型之外，其他的，都称之为 Object类型。")]),s("blockquote",[s("p",[t._v("面试问：引用数据类型有几种？")])]),s("blockquote",[s("p",[t._v("面试答：只有一种，即 Object 类型。")])]),s("p",[s("strong",[t._v("数据类型之间最大的区别")]),t._v("：")]),s("ul",[s("li",[s("p",[t._v("基本数据类型：参数赋值的时候，传数值。")])]),s("li",[s("p",[t._v("引用数据类型：参数赋值的时候，传地址（修改的同一片内存空间）。")])])]),s("p",[t._v("今天这篇文章，我们详细讲一下基本数据类型。")]),s("h2",{attrs:{id:"string-字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串","aria-hidden":"true"}},[t._v("#")]),t._v(" String 字符串")]),s("h3",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),s("p",[t._v("字符串型可以是引号中的任意文本，其语法为：双引号 "),s("code",[t._v('""')]),t._v(" 或者单引号 "),s("code",[t._v("''")]),t._v("。")]),s("p",[t._v("来看个示例。下面的这些，都是字符串：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"abcde"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"千古壹号"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"123123"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'哈哈哈哈哈'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" e "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('""')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{attrs:{class:"token comment"}},[t._v("//空字符串")]),t._v("\n\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" haha"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 没使用引号，到这里会直接报错。因为会被认为是js代码，但是之前并没有定义 haha。")]),t._v("\n\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" c"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" d"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" e"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),s("p",[t._v("控制台输出如下：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tstring\n\tstring\n\tstring\n\tstring\n\tstring\n")])]),s("h3",{attrs:{id:"引号的注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引号的注意事项","aria-hidden":"true"}},[t._v("#")]),t._v(" 引号的注意事项")]),s("p",[t._v("1、单引号和双引号不能混用。比如下面这样写是不可以的：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" 'hello\""),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("// 报错：Uncaught SyntaxError: Invalid or unexpected token")]),t._v("\n")])]),s("p",[t._v("2、同类引号不能嵌套：双引号里不能再放双引号，单引号里不能再放单引号。")]),s("p",[t._v("3、单引号里可以嵌套双引号；双引号里可以嵌套单引号。")]),s("h3",{attrs:{id:"转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义字符","aria-hidden":"true"}},[t._v("#")]),t._v(" 转义字符")]),s("p",[t._v("在字符串中我们可以使用"),s("code",[t._v("\\")]),t._v("作为转义字符，当表示一些特殊符号时可以使用"),s("code",[t._v("\\")]),t._v("进行转义。")]),s("ul",[s("li",[s("p",[s("code",[t._v('\\"')]),t._v(" 表示 "),s("code",[t._v('"')])])]),s("li",[s("p",[s("code",[t._v("\\'")]),t._v(" 表示 "),s("code",[t._v("'")])])]),s("li",[s("p",[s("code",[t._v("\\\\")]),t._v(" 表示"),s("code",[t._v("\\")])])]),s("li",[s("p",[s("code",[t._v("\\r")]),t._v(" 表示回车")])]),s("li",[s("p",[s("code",[t._v("\\n")]),t._v(" 表示换行。n 的意思是 newline。")])]),s("li",[s("p",[s("code",[t._v("\\t")]),t._v(" 表示缩进。t 的意思是 tab。")])]),s("li",[s("p",[s("code",[t._v("\\b")]),t._v(" 表示空格。b 的意思是 blank。")])])]),s("p",[t._v("举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"我说:\\"今天\\t天气真不错！\\""')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"\\\\\\\\\\\\"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上方代码的打印结果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\t我说:"今天\t天气真不错！"\n\t\\\\\\\n')])]),s("h3",{attrs:{id:"获取字符串的长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串的长度","aria-hidden":"true"}},[t._v("#")]),t._v(" 获取字符串的长度")]),s("p",[t._v("字符串是由若干个字符组成的，这些字符的数量就是字符串的长度。我们可以通过字符串的 length 属性可以获取整个字符串的长度。")]),s("p",[t._v("代码举例：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号，永不止步！'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str3 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'qianguyihao'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str4 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'qianguyihao, keep moving!'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 11")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str4"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 25")]),t._v("\n")])]),s("p",[t._v("由此可见，字符串的 length 属性，在判断字符串的长度时，会认为：")]),s("ul",[s("li",[s("p",[t._v("一个中文算一个字符，一个英文算一个字符")])]),s("li",[s("p",[t._v("一个标点符号（包括中文标点、英文标点）算一个字符")])]),s("li",[s("p",[t._v("一个空格算一个字符")])])]),s("h3",{attrs:{id:"字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符串拼接")]),s("p",[t._v("多个字符串之间可以使用加号 "),s("code",[t._v("+")]),t._v(" 进行拼接。")]),s("p",[s("strong",[t._v("拼接语法")]),t._v("：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("字符串 + 任意数据类型 = 拼接之后的新字符串;\n")])]),s("p",[s("strong",[t._v("拼接规则")]),t._v("：拼接前，会把与字符串相加的这个数据类型转成字符串，然后再拼接成一个新的字符串。")]),s("p",[s("strong",[t._v("代码举例")]),t._v("：（字符串与六大数据类型相加）")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'永不止步'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("666")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str3 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str4 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("null")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str5 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" undefined"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("28")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str6 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'千古壹号'")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" obj"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str4"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str5"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str6"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("打印结果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("千古壹号永不止步\n\n千古壹号666\n\n千古壹号true\n\n千古壹号null\n\n千古壹号undefined\n\n千古壹号[object Object]\n")])]),s("h2",{attrs:{id:"数值型：number"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值型：number","aria-hidden":"true"}},[t._v("#")]),t._v(" 数值型：Number")]),s("p",[t._v("在JS中所有的数值都是 Number 类型，包括整数和浮点数（小数）。")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("100")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 定义一个变量 a，并且赋值整数100")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 输出变量 a 的类型")]),t._v("\n\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("12.3")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// 定义一个变量 b，并且赋值浮点数 12.3")]),t._v("\n\tconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("上方代码的输出结果为：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("number\n\nnumber\n")])]),s("p",[t._v("再次补充：在 JS 中，只要是数，就是 Number 数值型的。无论整浮、浮点数（即小数）、无论大小、无论正负，都是 Number 类型的。")]),s("h3",{attrs:{id:"数值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值范围","aria-hidden":"true"}},[t._v("#")]),t._v(" 数值范围")]),s("p",[t._v("由于内存的限制，ECMAScript 并不能保存世界上所有的数值。")]),s("ul",[s("li",[s("p",[t._v("最大值："),s("code",[t._v("Number.MAX_VALUE")]),t._v("，这个值为： 1.7976931348623157e+308")])]),s("li",[s("p",[t._v("最小值："),s("code",[t._v("Number.MIN_VALUE")]),t._v("，这个值为： 5e-324")])])]),s("p",[t._v("如果使用 Number 表示的变量超过了最大值，则会返回Infinity。")]),s("ul",[s("li",[s("p",[t._v("无穷大（正无穷）：Infinity")])]),s("li",[s("p",[t._v("无穷小（负无穷）：-Infinity")])])]),s("p",[t._v("注意："),s("code",[t._v("typeof Infinity")]),t._v("的返回结果是number。")]),s("h3",{attrs:{id:"nan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan","aria-hidden":"true"}},[t._v("#")]),t._v(" NaN")]),s("p",[s("strong",[t._v("NaN")]),t._v("：是一个特殊的数字，表示Not a Number，非数值。比如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("18")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("//结果是NaN")]),t._v("\n\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"abc"')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"abcd"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("//按理说，字符串相乘是没有结果的，但如果你非要让JS去算，它就一定会给你一个结果。结果是NaN")]),t._v("\n")])]),s("p",[t._v("注意："),s("code",[t._v("typeof NaN")]),t._v("的返回结果是 number。")]),s("p",[t._v("Undefined和任何数值计算的结果为 NaN。NaN 与任何值都不相等，包括 NaN 本身。")]),s("p",[t._v("另外，关于 isNaN() 函数，可以看下一篇文章。")]),s("h3",{attrs:{id:"浮点数的运算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数的运算","aria-hidden":"true"}},[t._v("#")]),t._v(" 浮点数的运算")]),s("p",[t._v("在JS中，整数的运算"),s("strong",[t._v("基本")]),t._v("可以保证精确；但是"),s("strong",[t._v("小数的运算，可能会得到一个不精确的结果")]),t._v("。所以，千万不要使用JS进行对精确度要求比较高的运算。")]),s("p",[t._v("如下：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0.1")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0.2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{attrs:{class:"token comment"}},[t._v("//打印结果：0.30000000000000004")]),t._v("\n")])]),s("p",[t._v("上方代码中，打印结果并不是0.3，而是0.30000000000000004。")]),s("p",[t._v("我们知道，所有的运算都要转换成二进制去计算，然而，二进制是无法精确表示1/10的。因此存在小数的计算不精确的问题。")]),s("h3",{attrs:{id:"连字符和加号的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连字符和加号的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 连字符和加号的区别")]),s("p",[t._v("键盘上的"),s("code",[t._v("+")]),t._v("可能是连字符，也可能是数字的加号。如下：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('console.log("我" + "爱" + "你");\t//连字符，把三个独立的汉字，连接在一起了\nconsole.log("我+爱+你");\t\t\t//原样输出\nconsole.log(1+2+3);\t\t\t\t//输出6\n')])]),s("p",[t._v("输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我爱你\n我+爱+你\n6\n")])]),s("p",[s("strong",[t._v("总结")]),t._v("：如果加号两边"),s("strong",[t._v("都是")]),t._v("数值，此时是加。否则，就是连字符（用来连接字符串）。")]),s("p",[t._v("举例1：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"1"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("控制台输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("12\n")])]),s("p",[t._v("举例2：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var a = 1;\nvar b = 2;\nconsole.log("a" + b);\t//"a"就不是变量了！所以就是"a"+2 输出a2\n\n')])]),s("p",[t._v("控制台输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a2\n")])]),s("p",[t._v("于是我们明白了，在变量中加入字符串进行拼接，可以被同化为字符串。【重要】")]),s("h3",{attrs:{id:"隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 隐式转换")]),s("p",[t._v("我们知道，"),s("code",[t._v('"2"+1')]),t._v("得到的结果其实是字符串，但是"),s("code",[t._v('"2"-1')]),t._v("得到的结果却是数值1，这是因为计算机自动帮我们进行了“"),s("strong",[t._v("隐式转换")]),t._v("”。")]),s("p",[t._v("也就是说，"),s("code",[t._v("-")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("/")]),t._v("、"),s("code",[t._v("%")]),t._v("这几个符号会自动进行隐式转换。例如：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"4"')]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("输出结果：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token number"}},[t._v("37")]),t._v("\n")])]),s("p",[t._v("虽然程序可以对"),s("code",[t._v("-")]),t._v("、"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("/")]),t._v("、`%``这几个符号自动进行“隐式转换”；但作为程序员，我们最好自己完成转换，方便程序的可读性。")]),s("h2",{attrs:{id:"布尔值：boolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔值：boolean","aria-hidden":"true"}},[t._v("#")]),t._v(" 布尔值：Boolean")]),s("p",[t._v("布尔型有两个值：true 和 false。主要用来做逻辑判断： true 表示真，false 表示假。")]),s("p",[t._v("布尔值直接使用就可以了，千万不要加上引号。")]),s("p",[t._v("代码：")]),s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token boolean"}},[t._v("true")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),s("p",[t._v("控制台输出结果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("boolean\n")])]),s("p",[t._v("布尔型和数字型相加时， true 按 1 来算 ，false 按 0 来算。")]),s("h2",{attrs:{id:"null-和-undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null-和-undefined","aria-hidden":"true"}},[t._v("#")]),t._v(" Null 和 Undefined")]),s("h3",{attrs:{id:"null：空值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#null：空值","aria-hidden":"true"}},[t._v("#")]),s("code",[t._v("null")]),t._v("：空值")]),s("p",[t._v("专门用来表示一个为空的"),s("strong",[t._v("对象")]),t._v("（例如："),s("code",[t._v("var a = null")]),t._v("）。注意，专门用来表示"),s("strong",[t._v("空对象")]),t._v("。")]),s("ul",[s("li",[s("p",[t._v("Null类型的值只有一个，就是null。比如 "),s("code",[t._v("var a = null")]),t._v("。")])]),s("li",[s("p",[t._v("使用 typeof 检查一个null值时，会返回object。")])])]),s("h3",{attrs:{id:"undefined：未定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined：未定义","aria-hidden":"true"}},[t._v("#")]),s("code",[t._v("undefined")]),t._v("：未定义")]),s("p",[s("strong",[t._v("声明")]),t._v("了一个变量，但是没有"),s("strong",[t._v("赋值")]),t._v("（例如："),s("code",[t._v("var a;")]),t._v("），此时它的值就是 "),s("code",[t._v("undefined")]),t._v("。")]),s("ul",[s("li",[s("p",[t._v("Undefined类型的值只有一个，就是undefind。比如")])]),s("li",[s("p",[t._v("使用 type of 检查一个undefined时，会返回undefined。")])])]),s("p",[t._v("null和undefined有很大的相似性。看看null == undefined的结果(true)也就更加能说明这点。")]),s("p",[t._v("但是null === undefined的结果(false)。它们虽然相似，但还是有区别的，其中一个区别是：和数字运算时，10 + null结果为：10；10 + undefined结果为：NaN。")]),s("ul",[s("li",[s("p",[t._v("任何数据类型和undefined运算都是NaN;")])]),s("li",[s("p",[t._v("任何值和null运算，null可看做0运算。")])])]),s("h2",{attrs:{id:"变量值的传递（赋值）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量值的传递（赋值）","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量值的传递（赋值）")]),s("p",[t._v("语句：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("a = b;\n")])]),s("p",[t._v("把b的值赋给a，b不变。")]),s("p",[t._v("将等号右边的值，赋给左边的变量；等号右边的变量，值不变。")]),s("p",[t._v("来做几个题目。")]),s("p",[t._v("举例1：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t\t\t\t\t \t//a\t\tb       c\nvar a = 1;              //1\nvar b = 2;              //1     2\nvar c = 3;              //1     2       3\na = b + c;              //5     2       3\nb = c - a;              //5     -2      3\nc = a * b;              //5     -2      -10\nconsole.log(a);\nconsole.log(b);\nconsole.log(c);\n")])]),s("p",[t._v("输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("5\n-2\n-10\n")])]),s("p",[t._v("举例2：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\t\t\t\t\t\t//a    b     c\nvar a = 1;\nvar b = 2;\nvar c = 3;              //1     2     3\na = a + b;              //3     2     3\nb = b + a;              //3     5     3\nc = c + b;              //3     5     8\nconsole.log(a);  //3\nconsole.log(b);  //5\nconsole.log(c);  //8\n")])]),s("p",[t._v("输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("3\n5\n8\n")])]),s("p",[t._v("举例3：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\t\t\t\t    //a       b\nvar a = "1";\nvar b = 2;          //"1"     2\na = a + b;          //"12"    2\nb = b + a;          //"12"    "212"\nconsole.log(a);     //输出12\nconsole.log(b);     //输出212\n')])]),s("p",[t._v("输出：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("12\n212\n")])]),s("p",[t._v("举例4：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\t\t\t\t  //a         b\nvar a = "1";\nvar b = 2;\na = b + a;       //"21"       2\nb = b + a;       //"21"       "221"\nconsole.log(a);  //21\nconsole.log(b)   //221\n')])]),s("p",[t._v("效果：")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("21\n221\n")])]),s("p",[t._v("举例5：（这个例子比较特殊，字符串减去数字）")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('var a = "3";\nvar b = 2;\nconsole.log(a-b);\n')])]),s("p",[t._v("效果：（注意，字符串 - 数值 = 数值）")]),s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1\n")])]),s("h2",{attrs:{id:"我的公众号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号","aria-hidden":"true"}},[t._v("#")]),t._v(" 我的公众号")]),s("p",[t._v("想学习"),s("strong",[t._v("代码之外的技能")]),t._v("？不妨关注我的微信公众号："),s("strong",[t._v("千古壹号")]),t._v("（id："),s("code",[t._v("qianguyihao")]),t._v("）。")]),s("p",[t._v("扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：")]),s("p",[s("img",{attrs:{src:"http://img.smyhvae.com/20200101.png",alt:""}})])])}],!1,null,null,null);a.default=e.exports}}]);