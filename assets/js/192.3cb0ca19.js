(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{421:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式")]),a("h2",{attrs:{id:"正则表达式简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式简介")]),a("p",[a("strong",[t._v("定义")]),t._v("：正则表达式用于定义一些字符串的规则。")]),a("p",[a("strong",[t._v("作用")]),t._v("：计算机可以根据正则表达式，来检查一个字符串是否符合指定的规则；或者将字符串中符合规则的内容提取出来。")]),a("p",[t._v("如果你想查看正则更多的内容，可以查阅官方文档关于 RegExp 这个内置对象的用法。")]),a("h2",{attrs:{id:"创建正则表达式的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建正则表达式的对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建正则表达式的对象")]),a("h3",{attrs:{id:"方式一：使用构造函数创建正则表达式的对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式一：使用构造函数创建正则表达式的对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 方式一：使用构造函数创建正则表达式的对象")]),a("p",[t._v("语法：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"正则表达式"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 注意，参数是字符串")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"正则表达式"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"匹配模式"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 注意，两个参数都是字符串")]),t._v("\n")])]),a("p",[t._v("备注："),a("code",[t._v("RegExp")]),t._v("的意思是 "),a("strong",[t._v("Regular expression")]),t._v("。使用typeof检查正则对象，会返回object。")]),a("p",[t._v("上面的语法中，既可以传一个参数，也可以传两个参数。")]),a("p",[t._v("创建了正则表达式的对象后，该怎么使用呢？大致分为两个步骤：")]),a("ul",[a("li",[a("p",[t._v("（1）创建正则表达式的对象 reg。")])]),a("li",[a("p",[t._v("（2）使用 reg 的test() 方法，判断指定字符串是否符合规则。")])])]),a("p",[a("strong",[t._v("正则表达式的"),a("code",[t._v("test()")]),t._v("方法")]),t._v("：【重要】")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tmyReg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 判断字符串 str 是否符合 指定的 myReg 这个正则表达式的规则")]),t._v("\n")])]),a("p",[t._v("解释：使用"),a("code",[t._v("test()")]),t._v("这个方法可以用来检查一个字符串是否符合正则表达式的规则，"),a("strong",[t._v("如果符合则返回true，否则返回false")]),t._v("。")]),a("p",[t._v("我们来看看下面的例子。")]),a("p",[a("strong",[t._v("1、传一个参数时")]),t._v("：")]),a("p",[t._v("构造函数 RegExp 中，可以只传一个参数。")]),a("p",[t._v("代码举例：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"a"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 定义一个正则表达式：检查一个字符串中是否含有 a")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"qianguyihao"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"smyh"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("// 通过 test()方法，判断字符串是否符合 上面定义的 reg 规则")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：false")]),t._v("\n\n")])]),a("p",[t._v("注意，上面的例子中，我们是先定义了一个正则表达式的规则，然后通过正则表达式的"),a("code",[t._v("test()")]),t._v("方法来判断字符串是否符合之前定义的规则。")]),a("p",[a("strong",[t._v("2、传两个参数时")]),t._v("：匹配模式 【重要】")]),a("p",[t._v("构造函数 RegExp 中，也可以传两个参数。我们可以传递一个"),a("strong",[t._v("匹配模式")]),t._v("作为第二个参数。这个参数可以是：")]),a("ul",[a("li",[a("p",[a("code",[t._v("i")]),t._v(" 忽略大小写。这里的 i 指的是 ignore。")])]),a("li",[a("p",[a("code",[t._v("g")]),t._v(" 全局匹配模式。这里的 g 指的是 global。")])])]),a("p",[t._v("代码举例：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'A'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'i'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'qiangu'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n")])]),a("h3",{attrs:{id:"方式二：使用字面量创建正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方式二：使用字面量创建正则表达式","aria-hidden":"true"}},[t._v("#")]),t._v(" 方式二：使用字面量创建正则表达式")]),a("p",[t._v("我们可以使用字面量来创建正则表达式。")]),a("p",[t._v("语法：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/正则表达式/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 注意，这个语法里没有引号")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("正则表达式"),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("匹配模式"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 注意，这个语法里没有引号")]),t._v("\n")])]),a("p",[t._v("代码举例：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/A/i")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 定义正则表达式的规则：检查一个字符串中是否含有 a。忽略大小写。")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"qiangu"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：object")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n")])]),a("h3",{attrs:{id:"以上两种方式的对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#以上两种方式的对比","aria-hidden":"true"}},[t._v("#")]),t._v(" 以上两种方式的对比")]),a("ul",[a("li",[a("p",[t._v("方式一：使用构造函数创建时，更加灵活，因为参数中还可以传递变量。")])]),a("li",[a("p",[t._v("方式二：使用字面量的方式创建，更加简单。")])])]),a("p",[t._v("代码举例：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"a"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"i"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 方式一")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/a/i")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 方式二")]),t._v("\n")])]),a("p",[t._v("上面这两行代码的作用是等价的。")]),a("h3",{attrs:{id:"避坑指南：全局匹配-g-慎用test-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#避坑指南：全局匹配-g-慎用test-方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 避坑指南：全局匹配 g 慎用test()方法")]),a("p",[t._v("对于非全局匹配的正则表达式，"),a("code",[t._v("test()")]),t._v("只会检测"),a("strong",[t._v("是否存在某个目标字符串")]),t._v("（只要存在就为 true），多次检测的结果都相同。例如：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/test/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'_test_test'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nreg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nreg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nreg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),a("p",[t._v("重点来了。")]),a("p",[t._v("当设置全局标志 "),a("code",[t._v("/g")]),t._v(" 时，一旦字符串中还存在匹配，test() 方法都将返回 true，同时匹配成功后将把 "),a("code",[t._v("lastIndex")]),t._v(" 属性的值"),a("strong",[t._v("设置为上次匹配成功结果之后的第一个字符所在的位置")]),t._v("，下次匹配将从 "),a("code",[t._v("lastIndex")]),t._v(" 指示的位置开始；匹配不成功时返回 false，同时将 lastIndex 属性的值重置为 0。")]),a("p",[t._v("举例：（很重要的例子，看仔细）")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/test/g")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'_test_test'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lastIndex"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),a("p",[a("strong",[t._v("总结")]),t._v("：")]),a("p",[t._v("全局匹配模式"),a("code",[t._v("g")]),t._v("一般用于 "),a("code",[t._v("exec()")]),t._v("、"),a("code",[t._v("match()")]),t._v("、"),a("code",[t._v("replace()")]),t._v("等方法。")]),a("p",[t._v("全局匹配模式"),a("code",[t._v("g")]),t._v("如果用于test()方法会有问题。因为g模式会生成一个"),a("code",[t._v("lastindex")]),t._v("参数来存储匹配最后一次的位置。")]),a("p",[t._v("参考链接：")]),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://juejin.im/post/5de9bd5fe51d45582c27b6f3",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS正则表达式全局匹配的那些坑")])])]),a("li",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/Leolu007/article/details/8576490",target:"_blank",rel:"noopener noreferrer"}},[t._v("javascript正则全局匹配g慎用test方法")])])]),a("li",[a("p",[a("a",{attrs:{href:"https://github.com/qianguyihao/Web/issues/69",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues")])])])]),a("h2",{attrs:{id:"正则表达式的简单语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式的简单语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 正则表达式的简单语法")]),a("h3",{attrs:{id:"检查一个字符串中是否包含-a或b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查一个字符串中是否包含-a或b","aria-hidden":"true"}},[t._v("#")]),t._v(" 检查一个字符串中是否包含 a或b")]),a("p",[a("strong",[t._v("写法1")]),t._v("：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/a|b/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("解释：使用 "),a("code",[t._v("|")]),t._v(" 表示"),a("code",[t._v("或")]),t._v("的意思。")]),a("p",[a("strong",[t._v("写法2")]),t._v("：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[ab]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 跟上面的那行语法，是等价的")]),t._v("\n")])]),a("p",[t._v("解释：这里的"),a("code",[t._v("[]")]),t._v("也是表示"),a("code",[t._v("或")]),t._v("的意思。")]),a("p",[a("code",[t._v("[]")]),t._v("这个符号在正则还是比较常用的。我们接下来看几个例子。")]),a("h3",{attrs:{id:"表示：或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表示：或","aria-hidden":"true"}},[t._v("#")]),t._v(" []表示：或")]),a("p",[t._v("一些规则：")]),a("ul",[a("li",[a("p",[a("code",[t._v("/[ab]/")]),t._v(" 等价于 "),a("code",[t._v("/a|b/")]),t._v("：检查一个字符串中是否包含 "),a("strong",[t._v("a或b")])])]),a("li",[a("p",[a("code",[t._v("/[a-z]/")]),t._v("：检查一个字符串那种是否包含"),a("strong",[t._v("任意小写字母")])])]),a("li",[a("p",[a("code",[t._v("/[A-Z]/")]),t._v("：任意大写字母")])]),a("li",[a("p",[a("code",[t._v("/[A-z]/")]),t._v("：任意字母")])]),a("li",[a("p",[a("code",[t._v("/[0-9]/")]),t._v("：任意数字")])]),a("li",[a("p",[a("code",[t._v("/a[bde]c/")]),t._v("：检查一个字符串中是否包含 abc 或 adc 或 aec")])])]),a("h3",{attrs:{id:"表示：除了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表示：除了","aria-hidden":"true"}},[t._v("#")]),t._v(" [^ ] 表示：除了")]),a("p",[t._v("举例1：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[^ab]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 规则：字符串中，除了a、b之外，还有没有其他的字符内容？")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"acb"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n")])]),a("p",[t._v("举例2：（可以用来验证某字符串是否为 纯数字）")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" reg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/[^0-9]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 规则：字符串中，除了数字之外，还有没有其他的内容？")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"1991"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"199a1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：false （如果字符串是 纯数字，则返回 false）")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：true")]),t._v("\n")])]),a("h2",{attrs:{id:"支持正则表达式的-string-对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#支持正则表达式的-string-对象的方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 支持正则表达式的 String 对象的方法")]),a("p",[t._v("String对象的如下方法，是支持正则表达式的：")]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("split()")]),a("td",{staticStyle:{"text-align":"left"}},[t._v("将字符串拆分成数组")]),a("td",{staticStyle:{"text-align":"left"}})]),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("search()")]),a("td",{staticStyle:{"text-align":"left"}},[t._v("搜索字符串中是否含有指定内容，返回索引 index")]),a("td",{staticStyle:{"text-align":"left"}})]),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("match()")]),a("td",{staticStyle:{"text-align":"left"}},[t._v("根据正则表达式，从一个字符串中将符合条件的内容提取出来")]),a("td",{staticStyle:{"text-align":"left"}})]),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("replace()")]),a("td",{staticStyle:{"text-align":"left"}},[t._v("将字符串中的指定内容，替换为新的内容并返回")]),a("td",{staticStyle:{"text-align":"left"}})])])]),a("p",[t._v("下面来分别介绍和举例。")]),a("h3",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split","aria-hidden":"true"}},[t._v("#")]),t._v(" split()")]),a("p",[a("code",[t._v("split()")]),t._v("：将一个字符串拆分成一个数组。可以接受一个正则表达式作为参数。")]),a("p",[t._v("备注：关于"),a("code",[t._v("split()")]),t._v("更详细的用法，可以看之前的关于《内置对象：String》这篇文章。")]),a("p",[a("strong",[t._v("正则相关的举例")]),t._v("：根据任意字母，将字符串拆分成数组。")]),a("p",[t._v("代码实现：（通过正则）")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"1a2b3c4d5e6f7g"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("split")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/[A-z]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 参数是一个正则表达式：表示所有字母")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("打印结果：")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v('"1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"2"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"3"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"4"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"5"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"6"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"7"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),a("h3",{attrs:{id:"search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#search","aria-hidden":"true"}},[t._v("#")]),t._v(" search()")]),a("p",[a("code",[t._v("search()")]),t._v("：搜索字符串中是否含有指定内容。如果搜索到指定内容，则会返回第一次出现的索引；否则返回-1。")]),a("p",[a("code",[t._v("search()")]),t._v("方法可以接受一个正则表达式作为参数，然后会根据正则表达式去检索字符串。"),a("code",[t._v("serach()")]),t._v("只会查找第一个，即使设置全局匹配也没用。")]),a("p",[a("strong",[t._v("举例")]),t._v("：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"hello abc hello aec afc"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{attrs:{class:"token comment"}},[t._v("/*\n\t* 搜索字符串中是否含有abc 或 aec 或 afc\n\t*/")]),t._v("\n\tresult "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("search")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/a[bef]c/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 打印结果：6")]),t._v("\n")])]),a("h3",{attrs:{id:"match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#match","aria-hidden":"true"}},[t._v("#")]),t._v(" match()")]),a("p",[a("code",[t._v("match()")]),t._v("：根据正则表达式，从一个字符串中将符合条件的内容提取出来，封装到一个数组中返回（即使只查询到一个结果）。")]),a("p",[a("strong",[t._v("注意")]),t._v("：默认情况下，"),a("code",[t._v("match()")]),t._v("方法只会找到"),a("strong",[t._v("第一个")]),t._v("符合要求的内容，找到以后就停止检索。我们可以设置正则表达式为"),a("strong",[t._v("全局匹配")]),t._v("模式，这样就会匹配到所有的内容，并以"),a("strong",[t._v("数组")]),t._v("的形式返回。")]),a("p",[t._v("另外，我们可以为一个正则表达式设置多个匹配模式，且匹配模式的顺序无所谓。")]),a("p",[a("strong",[t._v("代码举例")]),t._v("：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"1a2a3a4a5e6f7A8B9C"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/[a-z]/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("// 找到符合要求的第一个内容，然后返回")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/[a-z]/g")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 设置为“全局匹配”模式，匹配字符串中 所有的小写字母")]),t._v("\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result3 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("match")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/[a-z]/gi")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 设置多个匹配模式，匹配字符串中 所有的字母（忽略大小写）")]),t._v("\n\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// 打印结果：["a"]')]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// 打印结果：["a", "a", "a", "a", "e", "f"]')]),t._v("\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result3"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// 打印结果：["a", "a", "a", "a", "e", "f", "A", "B", "C"]')]),t._v("\n")])]),a("p",[a("strong",[t._v("总结")]),t._v("：")]),a("p",[t._v("match()这个方法还是很实用的，可以在一个很长的字符串中，提取出"),a("strong",[t._v("有规则")]),t._v("的内容。这不就是爬虫的时候经常会遇到的场景么？")]),a("h3",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace","aria-hidden":"true"}},[t._v("#")]),t._v(" replace()")]),a("p",[a("code",[t._v("replace()")]),t._v("：将字符串中的指定内容，替换为新的内容并返回。不会修改原字符串。")]),a("p",[t._v("语法：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t新的字符串 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被替换的内容，新的内容"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("参数解释：")]),a("ul",[a("li",[a("p",[t._v("被替换的内容：可以接受一个正则表达式作为参数。")])]),a("li",[a("p",[t._v("新的内容：默认只会替换第一个。如果需要替换全部符合条件的内容，可以设置正则表达式为"),a("strong",[t._v("全局匹配")]),t._v("模式。")])])]),a("p",[t._v("代码举例：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{attrs:{class:"token comment"}},[t._v("//replace()方法：替换")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str2 "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Today is fine day,today is fine day !!!"')]),t._v("\n\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"today"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"tomorrow"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("//只能替换第一个today")]),t._v("\n    console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/today/gi")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('"tomorrow"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//这里用到了正则，且为“全局匹配”模式，才能替换所有的today")]),t._v("\n")])]),a("h2",{attrs:{id:"常见正则表达式举例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见正则表达式举例","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见正则表达式举例")]),a("h3",{attrs:{id:"检查一个字符串是否是一个合法手机号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查一个字符串是否是一个合法手机号","aria-hidden":"true"}},[t._v("#")]),t._v(" 检查一个字符串是否是一个合法手机号")]),a("p",[t._v("手机号的规则：")]),a("ul",[a("li",[a("p",[t._v("以1开头")])]),a("li",[a("p",[t._v("第二位是3~9之间任意数字")])]),a("li",[a("p",[t._v("三位以后任意9位数字")])])]),a("p",[t._v("正则实现：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" phoneStr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"13067890123"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" phoneReg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/^1[3-9][0-9]{9}$/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phoneReg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phoneStr"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[a("strong",[t._v("备注")]),t._v("：如果在正则表达式中同时使用"),a("code",[t._v("^")]),t._v("和"),a("code",[t._v("$")]),t._v("符号，则要求字符串必须完全符合正则表达式。")]),a("h3",{attrs:{id:"去掉字符串开头和结尾的空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去掉字符串开头和结尾的空格","aria-hidden":"true"}},[t._v("#")]),t._v(" 去掉字符串开头和结尾的空格")]),a("p",[t._v("正则实现：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tstr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/^\\s*|\\s*$/g")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("p",[t._v("解释如下：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\tstr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/^\\s*/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//去除开头的空格")]),t._v("\n\n\tstr "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("replace")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token regex"}},[t._v("/\\s*$/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('""')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("//去除结尾的空格")]),t._v("\n")])]),a("h3",{attrs:{id:"判断字符串是否为电子邮件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断字符串是否为电子邮件","aria-hidden":"true"}},[t._v("#")]),t._v(" 判断字符串是否为电子邮件")]),a("p",[t._v("正则实现：")]),a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" emailReg "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token regex"}},[t._v("/^\\w{3,}(\\.\\w+)*@[A-z0-9]+(\\.[A-z]{2,5}){1,2}$/")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" email "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"abchello@163.com"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("emailReg"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("test")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("h2",{attrs:{id:"我的公众号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我的公众号","aria-hidden":"true"}},[t._v("#")]),t._v(" 我的公众号")]),a("p",[t._v("想学习"),a("strong",[t._v("代码之外的技能")]),t._v("？不妨关注我的微信公众号："),a("strong",[t._v("千古壹号")]),t._v("（id："),a("code",[t._v("qianguyihao")]),t._v("）。")]),a("p",[t._v("扫一扫，你将发现另一个全新的世界，而这将是一场美丽的意外：")]),a("p",[a("img",{attrs:{src:"http://img.smyhvae.com/20190101.png",alt:""}})])])}],!1,null,null,null);s.default=e.exports}}]);