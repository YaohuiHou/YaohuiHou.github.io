(window.webpackJsonp=window.webpackJsonp||[]).push([[261],{490:function(e,t,n){"use strict";n.r(t);var s=n(1),r=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._m(1),e._m(2),e._m(3),n("p",[e._v("1、搜索 ‘order 表’ 中全部的内容\nSELECT * FROM order")]),n("p",[e._v("2、只获取对应列的内容\nSELECT LastName,FirstName FROM order\nSELECT LastName FROM order")]),e._m(4),n("p",[e._v("3、获取列表，不重复 SELECT DISTINCT\nSELECT DISTINCT LastName FROM order")]),e._m(5),n("p",[e._v("4、条件语句 where")]),n("p",[e._v("请注意，我们在例子中的条件值周围使用的是单引号。\nSQL 使用单引号来环绕文本值（大部分数据库系统也接受双引号）。如果是数值，请不要使用引号。")]),n("p",[e._v("文本：\n这是正确的：\nSELECT _ FROM Persons WHERE FirstName='Bush'\n这是错误的：\nSELECT _ FROM Persons WHERE FirstName=Bush\n数值：\n这是正确的：\nSELECT _ FROM Persons WHERE Year>1965\n这是错误的：\nSELECT _ FROM Persons WHERE Year>’1965'")]),e._m(6),n("p",[e._v("5、AND 和 OR 运算符\nselect _ FROM order where FirstName=‘Bush’ AND LastName=‘Carter’")]),n("p",[e._v("select _ FROM order where FirstName=‘Bush’ OR LastName=‘Carter’")]),e._m(7),e._m(8),n("p",[e._v("6、ORDER BY 语句 - 正序排序 DESC - 倒序")]),e._m(9),e._m(10),n("p",[e._v("7、INSERT INTO 插入语句")]),e._m(11),e._m(12),n("p",[e._v("8、Updata 修改语句")]),e._m(13),e._m(14),e._m(15),n("p",[e._v("9、DELETE 删除语句")]),n("p",[e._v("DELETE FROM order WHERE")]),n("hr"),e._m(16),e._m(17),e._m(18),e._m(19),e._m(20),e._m(21),e._m(22),e._m(23),e._m(24),e._m(25),e._m(26),e._m(27),e._m(28),e._m(29),e._m(30),e._m(31),e._m(32),e._m(33),e._m(34),n("p",[e._v("只要字段值还可以继续拆分，就不满足第一范式。")]),n("p",[e._v("范式设计得越详细，对某些实际操作可能会更好，但并非都有好处，需要对项目的实际情况进行设定。")]),e._m(35),n("p",[e._v("在满足第一范式的前提下，其他列都必须完全依赖于主键列。如果出现不完全依赖，只可能发生在联合主键的情况下：")]),e._m(36),e._m(37),n("p",[e._v("这就不满足第二范式：其他列都必须完全依赖于主键列！")]),e._m(38),e._m(39),e._m(40),n("p",[e._v("在满足第二范式的前提下，除了主键列之外，其他列之间不能有传递依赖关系。")]),e._m(41),e._m(42),e._m(43),n("p",[e._v("修改后就不存在其他列之间的传递依赖关系，其他列都只依赖于主键列，满足了第三范式的设计！")]),e._m(44),e._m(45),e._m(46),e._m(47),e._m(48),e._m(49),e._m(50),e._m(51),e._m(52),e._m(53),e._m(54),e._m(55),e._m(56),e._m(57),e._m(58),e._m(59),e._m(60),e._m(61),e._m(62),e._m(63),e._m(64),e._m(65),e._m(66),e._m(67),e._m(68),e._m(69),e._m(70),e._m(71),e._m(72),e._m(73),e._m(74),e._m(75),e._m(76),e._m(77),e._m(78),e._m(79),e._m(80),e._m(81),e._m(82),e._m(83),e._m(84),e._m(85),e._m(86),e._m(87),e._m(88),e._m(89),e._m(90),e._m(91),e._m(92),e._m(93),e._m(94),e._m(95),e._m(96),n("p",[e._v("首先找到教师编号：")]),e._m(97),e._m(98),e._m(99),n("p",[e._v("通过筛选出的课程号查询成绩表：")]),e._m(100),e._m(101),e._m(102),e._m(103),e._m(104),n("p",[e._v("查看和教师编号有有关的表的信息：")]),e._m(105),e._m(106),e._m(107),n("p",[e._v("根据筛选出来的课程号，找出在某课程中，拥有至少5名学员的教师编号：")]),e._m(108),e._m(109),e._m(110),e._m(111),e._m(112),e._m(113),e._m(114),e._m(115),e._m(116),e._m(117),e._m(118),e._m(119),e._m(120),e._m(121),e._m(122),e._m(123),e._m(124),e._m(125),e._m(126),e._m(127),e._m(128),e._m(129),e._m(130),e._m(131),e._m(132),e._m(133),e._m(134),e._m(135),e._m(136),e._m(137),e._m(138),e._m(139),e._m(140),e._m(141),e._m(142),e._m(143),e._m(144),e._m(145),e._m(146),e._m(147),e._m(148),e._m(149),e._m(150),e._m(151),e._m(152),e._m(153),e._m(154),e._m(155),e._m(156),e._m(157),e._m(158),e._m(159),e._m(160),e._m(161),e._m(162),e._m(163),e._m(164),e._m(165),e._m(166),e._m(167),n("p",[e._v("准备用于测试连接查询的数据：")]),e._m(168),e._m(169),e._m(170),e._m(171),e._m(172),e._m(173),e._m(174),e._m(175),e._m(176),e._m(177),e._m(178),e._m(179),e._m(180),n("p",[e._v("完整显示两张表的全部数据。")]),e._m(181),e._m(182),e._m(183),n("p",[e._v("比如我们的银行转账：")]),e._m(184),n("p",[e._v("在实际项目中，假设只有一条 SQL 语句执行成功，而另外一条执行失败了，就会出现数据前后不一致。")]),e._m(185),e._m(186),e._m(187),e._m(188),e._m(189),n("p",[e._v("什么是回滚？举个例子：")]),e._m(190),e._m(191),e._m(192),e._m(193),n("p",[e._v("由于所有执行过的 SQL 语句都已经被提交过了，所以数据并没有发生回滚。那如何让数据可以发生回滚？")]),e._m(194),n("p",[e._v("将自动提交关闭后，测试数据回滚：")]),e._m(195),e._m(196),e._m(197),e._m(198),e._m(199),e._m(200),e._m(201),e._m(202),e._m(203),e._m(204),e._m(205),e._m(206),e._m(207),e._m(208),e._m(209),e._m(210),e._m(211),e._m(212),e._m(213),e._m(214),n("p",[e._v("查看当前数据库的默认隔离级别：")]),e._m(215),n("p",[e._v("修改隔离级别：")]),e._m(216),e._m(217),e._m(218),e._m(219),e._m(220),e._m(221),e._m(222),e._m(223),e._m(224),e._m(225),n("p",[e._v("这样，再有新的事务连接进来时，它们就只能查询到已经提交过的事务数据了。但是对于当前事务来说，它们看到的还是未提交的数据，例如：")]),e._m(226),n("p",[e._v("但是这样还有问题，那就是假设一个事务在操作数据时，其他事务干扰了这个事务的数据。例如：")]),e._m(227),e._m(228),e._m(229),e._m(230),e._m(231),e._m(232),e._m(233),n("p",[e._v("当前事务开启后，没提交之前，查询不到，提交后可以被查询到。但是，在提交之前其他事务被开启了，那么在这条事务线上，就不会查询到当前有操作事务的连接。相当于开辟出一条单独的线程。")]),e._m(234),e._m(235),e._m(236),n("p",[e._v("然而事实是，在真实的数据表中，小张已经插入了一条数据。但是小王此时并不知道，也插入了同一条数据，会发生什么呢？")]),e._m(237),e._m(238),e._m(239),e._m(240),e._m(241),n("p",[e._v("还是拿小张和小王来举例：")]),e._m(242),e._m(243),e._m(244),n("ClientOnly",[n("livere")],1)],1)},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"mysql学习笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql学习笔记","aria-hidden":"true"}},[this._v("#")]),this._v(" MySQL学习笔记")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{href:"http://c.biancheng.net/mysql/",target:"_blank",rel:"noopener noreferrer"}},[this._v("MySQL教程：MySQL数据库学习宝典（从入门到精通）")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"语法简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 语法简介")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select","aria-hidden":"true"}},[this._v("#")]),this._v(" SELECT")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"select-distinct"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select-distinct","aria-hidden":"true"}},[this._v("#")]),this._v(" SELECT DISTINCT")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"where"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#where","aria-hidden":"true"}},[this._v("#")]),this._v(" WHERE")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"and-和-or"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#and-和-or","aria-hidden":"true"}},[this._v("#")]),this._v(" AND 和 OR")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("select * FROM order where (FirstName=‘Bush’ AND LastName=‘Carter’) OR city=‘Beijing’\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"order-by-order-by-name-desc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by-order-by-name-desc","aria-hidden":"true"}},[this._v("#")]),this._v(" ORDER BY / ORDER BY name DESC")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("以 City 排序\nSelect * from order ORDER BY City")]),t("li",[this._v("City 排序，相同 CIty 下根据 LastName 排序\nSelect * from order ORDER BY City, LastName")]),t("li",[this._v("City 倒序\nSELECT * FROM order ORDER BY City DESC")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"insert-into"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert-into","aria-hidden":"true"}},[this._v("#")]),this._v(" INSERT INTO")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("插入新的一行\nINSERT INTO order VALUES (10,'哈哈哈’,’first’,’hello’,’world’)")]),t("li",[this._v("插入指定的列\nINSERT INTO order (LastName,FirstName) VALUES (‘灰灰’,’猪猪')")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"updata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#updata","aria-hidden":"true"}},[this._v("#")]),this._v(" UPDATA")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",[this._v("UPDATE 表名称 SET 列名称 = 新值 WHERE 列名称 = 某值\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("更新某一行中的一列\nUPDATA order SET LastName=‘这是更新的值’ WHERE FirstName=Adams")]),t("li",[this._v("更新某一行中的若干列\nUPDATA order SET LastName=‘新值 1’,city=‘新值 2’ WHERE FIrstName=Adams")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"delete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delete","aria-hidden":"true"}},[this._v("#")]),this._v(" DELETE")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"sql学习笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql学习笔记","aria-hidden":"true"}},[this._v("#")]),this._v(" SQL学习笔记")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{href:"https://github.com/hjzCy/sql_node",target:"_blank",rel:"noopener noreferrer"}},[this._v("原文地址")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"登录和退出mysql服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#登录和退出mysql服务器","aria-hidden":"true"}},[this._v("#")]),this._v(" 登录和退出MySQL服务器")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{attrs:{class:"token comment"}},[this._v("# 登录MySQL")]),this._v("\n$ mysql -u root -p12345612\n\n"),t("span",{attrs:{class:"token comment"}},[this._v("# 退出MySQL数据库服务器")]),this._v("\n"),t("span",{attrs:{class:"token keyword"}},[this._v("exit")]),t("span",{attrs:{class:"token punctuation"}},[this._v(";")]),this._v("\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"基本语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本语法","aria-hidden":"true"}},[this._v("#")]),this._v(" 基本语法")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 显示所有数据库\nshow databases;\n\n-- 创建数据库\nCREATE DATABASE test;\n\n-- 切换数据库\nuse test;\n\n-- 显示数据库中的所有表\nshow tables;\n\n-- 创建数据表\nCREATE TABLE pet (\n    name VARCHAR(20),\n    owner VARCHAR(20),\n    species VARCHAR(20),\n    sex CHAR(1),\n    birth DATE,\n    death DATE\n);\n\n-- 查看数据表结构\n-- describe pet;\ndesc pet;\n\n-- 查询表\nSELECT * from pet;\n\n-- 插入数据\nINSERT INTO pet VALUES ('puffball', 'Diane', 'hamster', 'f', '1990-03-30', NULL);\n\n-- 修改数据\nUPDATE pet SET name = 'squirrel' where owner = 'Diane';\n\n-- 删除数据\nDELETE FROM pet where name = 'squirrel';\n\n-- 删除表\nDROP TABLE myorder;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"建表约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表约束","aria-hidden":"true"}},[this._v("#")]),this._v(" 建表约束")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"主键约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键约束","aria-hidden":"true"}},[this._v("#")]),this._v(" 主键约束")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 主键约束\n-- 使某个字段不重复且不得为空，确保表内所有数据的唯一性。\nCREATE TABLE user (\n    id INT PRIMARY KEY,\n    name VARCHAR(20)\n);\n\n-- 联合主键\n-- 联合主键中的每个字段都不能为空，并且加起来不能和已设置的联合主键重复。\nCREATE TABLE user (\n    id INT,\n    name VARCHAR(20),\n    password VARCHAR(20),\n    PRIMARY KEY(id, name)\n);\n\n-- 自增约束\n-- 自增约束的主键由系统自动递增分配。\nCREATE TABLE user (\n    id INT PRIMARY KEY AUTO_INCREMENT,\n    name VARCHAR(20)\n);\n\n-- 添加主键约束\n-- 如果忘记设置主键，还可以通过SQL语句设置（两种方式）：\nALTER TABLE user ADD PRIMARY KEY(id);\nALTER TABLE user MODIFY id INT PRIMARY KEY;\n\n-- 删除主键\nALTER TABLE user drop PRIMARY KEY;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"唯一主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#唯一主键","aria-hidden":"true"}},[this._v("#")]),this._v(" 唯一主键")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 建表时创建唯一主键\nCREATE TABLE user (\n    id INT,\n    name VARCHAR(20),\n    UNIQUE(name)\n);\n\n-- 添加唯一主键\n-- 如果建表时没有设置唯一建，还可以通过SQL语句设置（两种方式）：\nALTER TABLE user ADD UNIQUE(name);\nALTER TABLE user MODIFY name VARCHAR(20) UNIQUE;\n\n-- 删除唯一主键\nALTER TABLE user DROP INDEX name;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"非空约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非空约束","aria-hidden":"true"}},[this._v("#")]),this._v(" 非空约束")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 建表时添加非空约束\n-- 约束某个字段不能为空\nCREATE TABLE user (\n    id INT,\n    name VARCHAR(20) NOT NULL\n);\n\n-- 移除非空约束\nALTER TABLE user MODIFY name VARCHAR(20);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"默认约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认约束","aria-hidden":"true"}},[this._v("#")]),this._v(" 默认约束")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 建表时添加默认约束\n-- 约束某个字段的默认值\nCREATE TABLE user2 (\n    id INT,\n    name VARCHAR(20),\n    age INT DEFAULT 10\n);\n\n-- 移除非空约束\nALTER TABLE user MODIFY age INT;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"外键约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键约束","aria-hidden":"true"}},[this._v("#")]),this._v(" 外键约束")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 班级\nCREATE TABLE classes (\n    id INT PRIMARY KEY,\n    name VARCHAR(20)\n);\n\n-- 学生表\nCREATE TABLE students (\n    id INT PRIMARY KEY,\n    name VARCHAR(20),\n    -- 这里的 class_id 要和 classes 中的 id 字段相关联\n    class_id INT,\n    -- 表示 class_id 的值必须来自于 classes 中的 id 字段值\n    FOREIGN KEY(class_id) REFERENCES classes(id)\n);\n\n-- 1. 主表（父表）classes 中没有的数据值，在副表（子表）students 中，是不可以使用的；\n-- 2. 主表中的记录被副表引用时，主表不可以被删除。\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"数据库的三大设计范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库的三大设计范式","aria-hidden":"true"}},[this._v("#")]),this._v(" 数据库的三大设计范式")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1nf","aria-hidden":"true"}},[this._v("#")]),this._v(" 1NF")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_2nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2nf","aria-hidden":"true"}},[this._v("#")]),this._v(" 2NF")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 订单表\nCREATE TABLE myorder (\n    product_id INT,\n    customer_id INT,\n    product_name VARCHAR(20),\n    customer_name VARCHAR(20),\n    PRIMARY KEY (product_id, customer_id)\n);\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("实际上，在这张订单表中，"),n("code",[e._v("product_name")]),e._v(" 只依赖于 "),n("code",[e._v("product_id")]),e._v(" ，"),n("code",[e._v("customer_name")]),e._v(" 只依赖于 "),n("code",[e._v("customer_id")]),e._v(" 。也就是说，"),n("code",[e._v("product_name")]),e._v(" 和 "),n("code",[e._v("customer_id")]),e._v(" 是没用关系的，"),n("code",[e._v("customer_name")]),e._v(" 和 "),n("code",[e._v("product_id")]),e._v(" 也是没有关系的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE TABLE myorder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    customer_id INT\n);\n\nCREATE TABLE product (\n    id INT PRIMARY KEY,\n    name VARCHAR(20)\n);\n\nCREATE TABLE customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(20)\n);\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("拆分之后，"),n("code",[e._v("myorder")]),e._v(" 表中的 "),n("code",[e._v("product_id")]),e._v(" 和 "),n("code",[e._v("customer_id")]),e._v(" 完全依赖于 "),n("code",[e._v("order_id")]),e._v(" 主键，而 "),n("code",[e._v("product")]),e._v(" 和 "),n("code",[e._v("customer")]),e._v(" 表中的其他字段又完全依赖于主键。满足了第二范式的设计！")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_3nf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3nf","aria-hidden":"true"}},[this._v("#")]),this._v(" 3NF")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE TABLE myorder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    customer_id INT,\n    customer_phone VARCHAR(15)\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("表中的 "),t("code",[this._v("customer_phone")]),this._v(" 有可能依赖于 "),t("code",[this._v("order_id")]),this._v(" 、 "),t("code",[this._v("customer_id")]),this._v(" 两列，也就不满足了第三范式的设计：其他列之间不能有传递依赖关系。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE TABLE myorder (\n    order_id INT PRIMARY KEY,\n    product_id INT,\n    customer_id INT\n);\n\nCREATE TABLE customer (\n    id INT PRIMARY KEY,\n    name VARCHAR(20),\n    phone VARCHAR(15)\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"查询练习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询练习","aria-hidden":"true"}},[this._v("#")]),this._v(" 查询练习")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"准备数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备数据","aria-hidden":"true"}},[this._v("#")]),this._v(" 准备数据")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 创建数据库\nCREATE DATABASE select_test;\n-- 切换数据库\nUSE select_test;\n\n-- 创建学生表\nCREATE TABLE student (\n    no VARCHAR(20) PRIMARY KEY,\n    name VARCHAR(20) NOT NULL,\n    sex VARCHAR(10) NOT NULL,\n    birthday DATE, -- 生日\n    class VARCHAR(20) -- 所在班级\n);\n\n-- 创建教师表\nCREATE TABLE teacher (\n    no VARCHAR(20) PRIMARY KEY,\n    name VARCHAR(20) NOT NULL,\n    sex VARCHAR(10) NOT NULL,\n    birthday DATE,\n    profession VARCHAR(20) NOT NULL, -- 职称\n    department VARCHAR(20) NOT NULL -- 部门\n);\n\n-- 创建课程表\nCREATE TABLE course (\n    no VARCHAR(20) PRIMARY KEY,\n    name VARCHAR(20) NOT NULL,\n    t_no VARCHAR(20) NOT NULL, -- 教师编号\n    -- 表示该 tno 来自于 teacher 表中的 no 字段值\n    FOREIGN KEY(t_no) REFERENCES teacher(no) \n);\n\n-- 成绩表\nCREATE TABLE score (\n    s_no VARCHAR(20) NOT NULL, -- 学生编号\n    c_no VARCHAR(20) NOT NULL, -- 课程号\n    degree DECIMAL,\t-- 成绩\n    -- 表示该 s_no, c_no 分别来自于 student, course 表中的 no 字段值\n    FOREIGN KEY(s_no) REFERENCES student(no),\t\n    FOREIGN KEY(c_no) REFERENCES course(no),\n    -- 设置 s_no, c_no 为联合主键\n    PRIMARY KEY(s_no, c_no)\n);\n\n-- 查看所有表\nSHOW TABLES;\n\n-- 添加学生表数据\nINSERT INTO student VALUES('101', '曾华', '男', '1977-09-01', '95033');\nINSERT INTO student VALUES('102', '匡明', '男', '1975-10-02', '95031');\nINSERT INTO student VALUES('103', '王丽', '女', '1976-01-23', '95033');\nINSERT INTO student VALUES('104', '李军', '男', '1976-02-20', '95033');\nINSERT INTO student VALUES('105', '王芳', '女', '1975-02-10', '95031');\nINSERT INTO student VALUES('106', '陆军', '男', '1974-06-03', '95031');\nINSERT INTO student VALUES('107', '王尼玛', '男', '1976-02-20', '95033');\nINSERT INTO student VALUES('108', '张全蛋', '男', '1975-02-10', '95031');\nINSERT INTO student VALUES('109', '赵铁柱', '男', '1974-06-03', '95031');\n\n-- 添加教师表数据\nINSERT INTO teacher VALUES('804', '李诚', '男', '1958-12-02', '副教授', '计算机系');\nINSERT INTO teacher VALUES('856', '张旭', '男', '1969-03-12', '讲师', '电子工程系');\nINSERT INTO teacher VALUES('825', '王萍', '女', '1972-05-05', '助教', '计算机系');\nINSERT INTO teacher VALUES('831', '刘冰', '女', '1977-08-14', '助教', '电子工程系');\n\n-- 添加课程表数据\nINSERT INTO course VALUES('3-105', '计算机导论', '825');\nINSERT INTO course VALUES('3-245', '操作系统', '804');\nINSERT INTO course VALUES('6-166', '数字电路', '856');\nINSERT INTO course VALUES('9-888', '高等数学', '831');\n\n-- 添加添加成绩表数据\nINSERT INTO score VALUES('103', '3-105', '92');\nINSERT INTO score VALUES('103', '3-245', '86');\nINSERT INTO score VALUES('103', '6-166', '85');\nINSERT INTO score VALUES('105', '3-105', '88');\nINSERT INTO score VALUES('105', '3-245', '75');\nINSERT INTO score VALUES('105', '6-166', '79');\nINSERT INTO score VALUES('109', '3-105', '76');\nINSERT INTO score VALUES('109', '3-245', '68');\nINSERT INTO score VALUES('109', '6-166', '81');\n\n-- 查看表结构\nSELECT * FROM course;\nSELECT * FROM score;\nSELECT * FROM student;\nSELECT * FROM teacher;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"_1-到-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-到-10","aria-hidden":"true"}},[this._v("#")]),this._v(" 1 到 10")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 查询 student 表的所有行\nSELECT * FROM student;\n\n-- 查询 student 表中的 name、sex 和 class 字段的所有行\nSELECT name, sex, class FROM student;\n\n-- 查询 teacher 表中不重复的 department 列\n-- department: 去重查询\nSELECT DISTINCT department FROM teacher;\n\n-- 查询 score 表中成绩在60-80之间的所有行（区间查询和运算符查询）\n-- BETWEEN xx AND xx: 查询区间, AND 表示 \"并且\"\nSELECT * FROM score WHERE degree BETWEEN 60 AND 80;\nSELECT * FROM score WHERE degree > 60 AND degree < 80;\n\n-- 查询 score 表中成绩为 85, 86 或 88 的行\n-- IN: 查询规定中的多个值\nSELECT * FROM score WHERE degree IN (85, 86, 88);\n\n-- 查询 student 表中 '95031' 班或性别为 '女' 的所有行\n-- or: 表示或者关系\nSELECT * FROM student WHERE class = '95031' or sex = '女';\n\n-- 以 class 降序的方式查询 student 表的所有行\n-- DESC: 降序，从高到低\n-- ASC（默认）: 升序，从低到高\nSELECT * FROM student ORDER BY class DESC;\nSELECT * FROM student ORDER BY class ASC;\n\n-- 以 c_no 升序、degree 降序查询 score 表的所有行\nSELECT * FROM score ORDER BY c_no ASC, degree DESC;\n\n-- 查询 \"95031\" 班的学生人数\n-- COUNT: 统计\nSELECT COUNT(*) FROM student WHERE class = '95031';\n\n-- 查询 score 表中的最高分的学生学号和课程编号（子查询或排序查询）。\n-- (SELECT MAX(degree) FROM score): 子查询，算出最高分\nSELECT s_no, c_no FROM score WHERE degree = (SELECT MAX(degree) FROM score);\n\n--  排序查询\n-- LIMIT r, n: 表示从第r行开始，查询n条数据\nSELECT s_no, c_no, degree FROM score ORDER BY degree DESC LIMIT 0, 1;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"分组计算平均成绩"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分组计算平均成绩","aria-hidden":"true"}},[this._v("#")]),this._v(" 分组计算平均成绩")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询每门课的平均成绩。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- AVG: 平均值\nSELECT AVG(degree) FROM score WHERE c_no = '3-105';\nSELECT AVG(degree) FROM score WHERE c_no = '3-245';\nSELECT AVG(degree) FROM score WHERE c_no = '6-166';\n\n-- GROUP BY: 分组查询\nSELECT c_no, AVG(degree) FROM score GROUP BY c_no;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"分组条件与模糊查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分组条件与模糊查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 分组条件与模糊查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("score")]),this._v(" 表中至少有 2 名学生选修，并以 3 开头的课程的平均分数。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score;\n-- c_no 课程编号\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n| 103  | 3-245 |     86 |\n| 103  | 6-166 |     85 |\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("分析表发现，至少有 2 名学生选修的课程是 "),n("code",[e._v("3-105")]),e._v(" 、"),n("code",[e._v("3-245")]),e._v(" 、"),n("code",[e._v("6-166")]),e._v(" ，以 3 开头的课程是 "),n("code",[e._v("3-105")]),e._v(" 、"),n("code",[e._v("3-245")]),e._v(" 。也就是说，我们要查询所有 "),n("code",[e._v("3-105")]),e._v(" 和 "),n("code",[e._v("3-245")]),e._v(" 的 "),n("code",[e._v("degree")]),e._v(" 平均分。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 首先把 c_no, AVG(degree) 通过分组查询出来\nSELECT c_no, AVG(degree) FROM score GROUP BY c_no\n+-------+-------------+\n| c_no  | AVG(degree) |\n+-------+-------------+\n| 3-105 |     85.3333 |\n| 3-245 |     76.3333 |\n| 6-166 |     81.6667 |\n+-------+-------------+\n\n-- 再查询出至少有 2 名学生选修的课程\n-- HAVING: 表示持有\nHAVING COUNT(c_no) >= 2\n\n-- 并且是以 3 开头的课程\n-- LIKE 表示模糊查询，\"%\" 是一个通配符，匹配 \"3\" 后面的任意字符。\nAND c_no LIKE '3%';\n\n-- 把前面的SQL语句拼接起来，\n-- 后面加上一个 COUNT(*)，表示将每个分组的个数也查询出来。\nSELECT c_no, AVG(degree), COUNT(*) FROM score GROUP BY c_no\nHAVING COUNT(c_no) >= 2 AND c_no LIKE '3%';\n+-------+-------------+----------+\n| c_no  | AVG(degree) | COUNT(*) |\n+-------+-------------+----------+\n| 3-105 |     85.3333 |        3 |\n| 3-245 |     76.3333 |        3 |\n+-------+-------------+----------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"多表查询-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-1","aria-hidden":"true"}},[this._v("#")]),this._v(" 多表查询 - 1")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("查询所有学生的 "),n("code",[e._v("name")]),e._v("，以及该学生在 "),n("code",[e._v("score")]),e._v(" 表中对应的 "),n("code",[e._v("c_no")]),e._v(" 和 "),n("code",[e._v("degree")]),e._v(" 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT no, name FROM student;\n+-----+-----------+\n| no  | name      |\n+-----+-----------+\n| 101 | 曾华      |\n| 102 | 匡明      |\n| 103 | 王丽      |\n| 104 | 李军      |\n| 105 | 王芳      |\n| 106 | 陆军      |\n| 107 | 王尼玛    |\n| 108 | 张全蛋    |\n| 109 | 赵铁柱    |\n+-----+-----------+\n\nSELECT s_no, c_no, degree FROM score;\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n| 103  | 3-245 |     86 |\n| 103  | 6-166 |     85 |\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("通过分析可以发现，只要把 "),n("code",[e._v("score")]),e._v(" 表中的 "),n("code",[e._v("s_no")]),e._v(" 字段值替换成 "),n("code",[e._v("student")]),e._v(" 表中对应的 "),n("code",[e._v("name")]),e._v(" 字段值就可以了，如何做呢？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- FROM...: 表示从 student, score 表中查询\n-- WHERE 的条件表示为，只有在 student.no 和 score.s_no 相等时才显示出来。\nSELECT name, c_no, degree FROM student, score \nWHERE student.no = score.s_no;\n+-----------+-------+--------+\n| name      | c_no  | degree |\n+-----------+-------+--------+\n| 王丽      | 3-105 |     92 |\n| 王丽      | 3-245 |     86 |\n| 王丽      | 6-166 |     85 |\n| 王芳      | 3-105 |     88 |\n| 王芳      | 3-245 |     75 |\n| 王芳      | 6-166 |     79 |\n| 赵铁柱    | 3-105 |     76 |\n| 赵铁柱    | 3-245 |     68 |\n| 赵铁柱    | 6-166 |     81 |\n+-----------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"多表查询-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 多表查询 - 2")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("查询所有学生的 "),n("code",[e._v("no")]),e._v(" 、课程名称 ( "),n("code",[e._v("course")]),e._v(" 表中的 "),n("code",[e._v("name")]),e._v(" ) 和成绩 ( "),n("code",[e._v("score")]),e._v(" 表中的 "),n("code",[e._v("degree")]),e._v(" ) 列。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("只有 "),n("code",[e._v("score")]),e._v(" 关联学生的 "),n("code",[e._v("no")]),e._v(" ，因此只要查询 "),n("code",[e._v("score")]),e._v(" 表，就能找出所有和学生相关的 "),n("code",[e._v("no")]),e._v(" 和 "),n("code",[e._v("degree")]),e._v(" ：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT s_no, c_no, degree FROM score;\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n| 103  | 3-245 |     86 |\n| 103  | 6-166 |     85 |\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("然后查询 "),t("code",[this._v("course")]),this._v(" 表：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("+-------+-----------------+\n| no    | name            |\n+-------+-----------------+\n| 3-105 | 计算机导论      |\n| 3-245 | 操作系统        |\n| 6-166 | 数字电路        |\n| 9-888 | 高等数学        |\n+-------+-----------------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("只要把 "),n("code",[e._v("score")]),e._v(" 表中的 "),n("code",[e._v("c_no")]),e._v(" 替换成 "),n("code",[e._v("course")]),e._v(" 表中对应的 "),n("code",[e._v("name")]),e._v(" 字段值就可以了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 增加一个查询字段 name，分别从 score、course 这两个表中查询。\n-- as 表示取一个该字段的别名。\nSELECT s_no, name as c_name, degree FROM score, course\nWHERE score.c_no = course.no;\n+------+-----------------+--------+\n| s_no | c_name          | degree |\n+------+-----------------+--------+\n| 103  | 计算机导论      |     92 |\n| 105  | 计算机导论      |     88 |\n| 109  | 计算机导论      |     76 |\n| 103  | 操作系统        |     86 |\n| 105  | 操作系统        |     75 |\n| 109  | 操作系统        |     68 |\n| 103  | 数字电路        |     85 |\n| 105  | 数字电路        |     79 |\n| 109  | 数字电路        |     81 |\n+------+-----------------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"三表关联查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三表关联查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 三表关联查询")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("查询所有学生的 "),n("code",[e._v("name")]),e._v(" 、课程名 ( "),n("code",[e._v("course")]),e._v(" 表中的 "),n("code",[e._v("name")]),e._v(" ) 和 "),n("code",[e._v("degree")]),e._v(" 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("只有 "),t("code",[this._v("score")]),this._v(" 表中关联学生的学号和课堂号，我们只要围绕着 "),t("code",[this._v("score")]),this._v(" 这张表查询就好了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score;\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n| 103  | 3-245 |     86 |\n| 103  | 6-166 |     85 |\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("只要把 "),n("code",[e._v("s_no")]),e._v(" 和 "),n("code",[e._v("c_no")]),e._v(" 替换成 "),n("code",[e._v("student")]),e._v(" 和 "),n("code",[e._v("srouse")]),e._v(" 表中对应的 "),n("code",[e._v("name")]),e._v(" 字段值就好了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先把 "),t("code",[this._v("s_no")]),this._v(" 替换成 "),t("code",[this._v("student")]),this._v(" 表中的 "),t("code",[this._v("name")]),this._v(" 字段：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT name, c_no, degree FROM student, score WHERE student.no = score.s_no;\n+-----------+-------+--------+\n| name      | c_no  | degree |\n+-----------+-------+--------+\n| 王丽      | 3-105 |     92 |\n| 王丽      | 3-245 |     86 |\n| 王丽      | 6-166 |     85 |\n| 王芳      | 3-105 |     88 |\n| 王芳      | 3-245 |     75 |\n| 王芳      | 6-166 |     79 |\n| 赵铁柱    | 3-105 |     76 |\n| 赵铁柱    | 3-245 |     68 |\n| 赵铁柱    | 6-166 |     81 |\n+-----------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("再把 "),t("code",[this._v("c_no")]),this._v(" 替换成 "),t("code",[this._v("course")]),this._v(" 表中的 "),t("code",[this._v("name")]),this._v(" 字段：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('-- 课程表\nSELECT no, name FROM course;\n+-------+-----------------+\n| no    | name            |\n+-------+-----------------+\n| 3-105 | 计算机导论      |\n| 3-245 | 操作系统        |\n| 6-166 | 数字电路        |\n| 9-888 | 高等数学        |\n+-------+-----------------+\n\n-- 由于字段名存在重复，使用 "表名.字段名 as 别名" 代替。\nSELECT student.name as s_name, course.name as c_name, degree \nFROM student, score, course\nWHERE student.NO = score.s_no\nAND score.c_no = course.no;\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询加分组求平均分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询加分组求平均分","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询加分组求平均分")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("95031")]),this._v(" 班学生每门课程的平均成绩。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 "),t("code",[this._v("score")]),this._v(" 表中根据 "),t("code",[this._v("student")]),this._v("  表的学生编号筛选出学生的课堂号和成绩：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- IN (..): 将筛选出的学生号当做 s_no 的条件查询\nSELECT s_no, c_no, degree FROM score\nWHERE s_no IN (SELECT no FROM student WHERE class = '95031');\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这时只要将 "),t("code",[this._v("c_no")]),this._v(" 分组一下就能得出 "),t("code",[this._v("95031")]),this._v(" 班学生每门课的平均成绩：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT c_no, AVG(degree) FROM score\nWHERE s_no IN (SELECT no FROM student WHERE class = '95031')\nGROUP BY c_no;\n+-------+-------------+\n| c_no  | AVG(degree) |\n+-------+-------------+\n| 3-105 |     82.0000 |\n| 3-245 |     71.5000 |\n| 6-166 |     80.0000 |\n+-------+-------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-1","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 1")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询在 "),t("code",[this._v("3-105")]),this._v(" 课程中，所有成绩高于 "),t("code",[this._v("109")]),this._v(" 号同学的记录。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先筛选出课堂号为 "),t("code",[this._v("3-105")]),this._v(" ，在找出所有成绩高于 "),t("code",[this._v("109")]),this._v(" 号同学的的行。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score \nWHERE c_no = '3-105'\nAND degree > (SELECT degree FROM score WHERE s_no = '109' AND c_no = '3-105');\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 2")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询所有成绩高于 "),t("code",[this._v("109")]),this._v(" 号同学的 "),t("code",[this._v("3-105")]),this._v(" 课程成绩记录。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 不限制课程号，只要成绩大于109号同学的3-105课程成绩就可以。\nSELECT * FROM score\nWHERE degree > (SELECT degree FROM score WHERE s_no = '109' AND c_no = '3-105');\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"year-函数与带-in-关键字查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#year-函数与带-in-关键字查询","aria-hidden":"true"}},[this._v("#")]),this._v(" YEAR 函数与带 IN 关键字查询")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("查询所有和 "),n("code",[e._v("101")]),e._v(" 、"),n("code",[e._v("108")]),e._v(" 号学生同年出生的 "),n("code",[e._v("no")]),e._v(" 、"),n("code",[e._v("name")]),e._v(" 、"),n("code",[e._v("birthday")]),e._v(" 列。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- YEAR(..): 取出日期中的年份\nSELECT no, name, birthday FROM student\nWHERE YEAR(birthday) IN (SELECT YEAR(birthday) FROM student WHERE no IN (101, 108));\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"多层嵌套子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多层嵌套子查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 多层嵌套子查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("'张旭'")]),this._v(" 教师任课的学生成绩表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT NO FROM teacher WHERE NAME = '张旭'\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("通过 "),t("code",[this._v("sourse")]),this._v(" 表找到该教师课程号：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT NO FROM course WHERE t_no = ( SELECT NO FROM teacher WHERE NAME = '张旭' );\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score WHERE c_no = (\n    SELECT no FROM course WHERE t_no = ( \n        SELECT no FROM teacher WHERE NAME = '张旭' \n    )\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 多表查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询某选修课程多于5个同学的教师姓名。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("首先在 "),t("code",[this._v("teacher")]),this._v(" 表中，根据 "),t("code",[this._v("no")]),this._v(" 字段来判断该教师的同一门课程是否有至少5名学员选修：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 查询 teacher 表\nSELECT no, name FROM teacher;\n+-----+--------+\n| no  | name   |\n+-----+--------+\n| 804 | 李诚   |\n| 825 | 王萍   |\n| 831 | 刘冰   |\n| 856 | 张旭   |\n+-----+--------+\n\nSELECT name FROM teacher WHERE no IN (\n    -- 在这里找到对应的条件\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM course;\n-- t_no: 教师编号\n+-------+-----------------+------+\n| no    | name            | t_no |\n+-------+-----------------+------+\n| 3-105 | 计算机导论      | 825  |\n| 3-245 | 操作系统        | 804  |\n| 6-166 | 数字电路        | 856  |\n| 9-888 | 高等数学        | 831  |\n+-------+-----------------+------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("我们已经找到和教师编号有关的字段就在 "),t("code",[this._v("course")]),this._v(" 表中，但是还无法知道哪门课程至少有5名学生选修，所以还需要根据 "),t("code",[this._v("score")]),this._v(" 表来查询：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 在此之前向 score 插入一些数据，以便丰富查询条件。\nINSERT INTO score VALUES ('101', '3-105', '90');\nINSERT INTO score VALUES ('102', '3-105', '91');\nINSERT INTO score VALUES ('104', '3-105', '89');\n\n-- 查询 score 表\nSELECT * FROM score;\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 101  | 3-105 |     90 |\n| 102  | 3-105 |     91 |\n| 103  | 3-105 |     92 |\n| 103  | 3-245 |     86 |\n| 103  | 6-166 |     85 |\n| 104  | 3-105 |     89 |\n| 105  | 3-105 |     88 |\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n\n-- 在 score 表中将 c_no 作为分组，并且限制 c_no 持有至少 5 条数据。\nSELECT c_no FROM score GROUP BY c_no HAVING COUNT(*) > 5;\n+-------+\n| c_no  |\n+-------+\n| 3-105 |\n+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT t_no FROM course WHERE no IN (\n    SELECT c_no FROM score GROUP BY c_no HAVING COUNT(*) > 5\n);\n+------+\n| t_no |\n+------+\n| 825  |\n+------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 "),t("code",[this._v("teacher")]),this._v(" 表中，根据筛选出来的教师编号找到教师姓名：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT name FROM teacher WHERE no IN (\n    -- 最终条件\n    SELECT t_no FROM course WHERE no IN (\n        SELECT c_no FROM score GROUP BY c_no HAVING COUNT(*) > 5\n    )\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-3","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 3")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 “计算机系” 课程的成绩表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("思路是，先找出 "),t("code",[this._v("course")]),this._v(" 表中所有 "),t("code",[this._v("计算机系")]),this._v(" 课程的编号，然后根据这个编号查询 "),t("code",[this._v("score")]),this._v(" 表。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 通过 teacher 表查询所有 `计算机系` 的教师编号\nSELECT no, name, department FROM teacher WHERE department = '计算机系'\n+-----+--------+--------------+\n| no  | name   | department   |\n+-----+--------+--------------+\n| 804 | 李诚   | 计算机系     |\n| 825 | 王萍   | 计算机系     |\n+-----+--------+--------------+\n\n-- 通过 course 表查询该教师的课程编号\nSELECT no FROM course WHERE t_no IN (\n    SELECT no FROM teacher WHERE department = '计算机系'\n);\n+-------+\n| no    |\n+-------+\n| 3-245 |\n| 3-105 |\n+-------+\n\n-- 根据筛选出来的课程号查询成绩表\nSELECT * FROM score WHERE c_no IN (\n    SELECT no FROM course WHERE t_no IN (\n        SELECT no FROM teacher WHERE department = '计算机系'\n    )\n);\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-245 |     86 |\n| 105  | 3-245 |     75 |\n| 109  | 3-245 |     68 |\n| 101  | 3-105 |     90 |\n| 102  | 3-105 |     91 |\n| 103  | 3-105 |     92 |\n| 104  | 3-105 |     89 |\n| 105  | 3-105 |     88 |\n| 109  | 3-105 |     76 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"union-和-notin-的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#union-和-notin-的使用","aria-hidden":"true"}},[this._v("#")]),this._v(" UNION 和 NOTIN 的使用")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("计算机系")]),this._v(" 与 "),t("code",[this._v("电子工程系")]),this._v(" 中的不同职称的教师。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- NOT: 代表逻辑非\nSELECT * FROM teacher WHERE department = '计算机系' AND profession NOT IN (\n    SELECT profession FROM teacher WHERE department = '电子工程系'\n)\n-- 合并两个集\nUNION\nSELECT * FROM teacher WHERE department = '电子工程系' AND profession NOT IN (\n    SELECT profession FROM teacher WHERE department = '计算机系'\n);\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"any-表示至少一个-desc-降序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#any-表示至少一个-desc-降序","aria-hidden":"true"}},[this._v("#")]),this._v(" ANY 表示至少一个 - DESC ( 降序 )")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("strong",[e._v("查询课程 "),n("code",[e._v("3-105")]),e._v(" 且成绩 "),n("u",[e._v("至少")]),e._v(" 高于 "),n("code",[e._v("3-245")]),e._v(" 的 "),n("code",[e._v("score")]),e._v(" 表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score WHERE c_no = '3-105';\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 101  | 3-105 |     90 |\n| 102  | 3-105 |     91 |\n| 103  | 3-105 |     92 |\n| 104  | 3-105 |     89 |\n| 105  | 3-105 |     88 |\n| 109  | 3-105 |     76 |\n+------+-------+--------+\n\nSELECT * FROM score WHERE c_no = '3-245';\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-245 |     86 |\n| 105  | 3-245 |     75 |\n| 109  | 3-245 |     68 |\n+------+-------+--------+\n\n-- ANY: 符合SQL语句中的任意条件。\n-- 也就是说，在 3-105 成绩中，只要有一个大于从 3-245 筛选出来的任意行就符合条件，\n-- 最后根据降序查询结果。\nSELECT * FROM score WHERE c_no = '3-105' AND degree > ANY(\n    SELECT degree FROM score WHERE c_no = '3-245'\n) ORDER BY degree DESC;\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n| 102  | 3-105 |     91 |\n| 101  | 3-105 |     90 |\n| 104  | 3-105 |     89 |\n| 105  | 3-105 |     88 |\n| 109  | 3-105 |     76 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"表示所有的-all"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表示所有的-all","aria-hidden":"true"}},[this._v("#")]),this._v(" 表示所有的 ALL")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询课程 "),t("code",[this._v("3-105")]),this._v(" 且成绩高于 "),t("code",[this._v("3-245")]),this._v(" 的 "),t("code",[this._v("score")]),this._v(" 表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 只需对上一道题稍作修改。\n-- ALL: 符合SQL语句中的所有条件。\n-- 也就是说，在 3-105 每一行成绩中，都要大于从 3-245 筛选出来全部行才算符合条件。\nSELECT * FROM score WHERE c_no = '3-105' AND degree > ALL(\n    SELECT degree FROM score WHERE c_no = '3-245'\n);\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 101  | 3-105 |     90 |\n| 102  | 3-105 |     91 |\n| 103  | 3-105 |     92 |\n| 104  | 3-105 |     89 |\n| 105  | 3-105 |     88 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"复制表的数据作为条件查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#复制表的数据作为条件查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 复制表的数据作为条件查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询某课程成绩比该课程平均成绩低的 "),t("code",[this._v("score")]),this._v(" 表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 查询平均分\nSELECT c_no, AVG(degree) FROM score GROUP BY c_no;\n+-------+-------------+\n| c_no  | AVG(degree) |\n+-------+-------------+\n| 3-105 |     87.6667 |\n| 3-245 |     76.3333 |\n| 6-166 |     81.6667 |\n+-------+-------------+\n\n-- 查询 score 表\nSELECT degree FROM score;\n+--------+\n| degree |\n+--------+\n|     90 |\n|     91 |\n|     92 |\n|     86 |\n|     85 |\n|     89 |\n|     88 |\n|     75 |\n|     79 |\n|     76 |\n|     68 |\n|     81 |\n+--------+\n\n-- 将表 b 作用于表 a 中查询数据\n-- score a (b): 将表声明为 a (b)，\n-- 如此就能用 a.c_no = b.c_no 作为条件执行查询了。\nSELECT * FROM score a WHERE degree < (\n    (SELECT AVG(degree) FROM score b WHERE a.c_no = b.c_no)\n);\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 105  | 3-245 |     75 |\n| 105  | 6-166 |     79 |\n| 109  | 3-105 |     76 |\n| 109  | 3-245 |     68 |\n| 109  | 6-166 |     81 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-4","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 4")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询所有任课 ( 在 "),t("code",[this._v("course")]),this._v(" 表里有课程 ) 教师的 "),t("code",[this._v("name")]),this._v(" 和 "),t("code",[this._v("department")])]),this._v(" 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT name, department FROM teacher WHERE no IN (SELECT t_no FROM course);\n+--------+-----------------+\n| name   | department      |\n+--------+-----------------+\n| 李诚   | 计算机系        |\n| 王萍   | 计算机系        |\n| 刘冰   | 电子工程系      |\n| 张旭   | 电子工程系      |\n+--------+-----------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"条件加组筛选"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件加组筛选","aria-hidden":"true"}},[this._v("#")]),this._v(" 条件加组筛选")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("student")]),this._v(" 表中至少有 2 名男生的 "),t("code",[this._v("class")]),this._v(" 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 查看学生表信息\nSELECT * FROM student;\n+-----+-----------+-----+------------+-------+\n| no  | name      | sex | birthday   | class |\n+-----+-----------+-----+------------+-------+\n| 101 | 曾华      | 男  | 1977-09-01 | 95033 |\n| 102 | 匡明      | 男  | 1975-10-02 | 95031 |\n| 103 | 王丽      | 女  | 1976-01-23 | 95033 |\n| 104 | 李军      | 男  | 1976-02-20 | 95033 |\n| 105 | 王芳      | 女  | 1975-02-10 | 95031 |\n| 106 | 陆军      | 男  | 1974-06-03 | 95031 |\n| 107 | 王尼玛    | 男  | 1976-02-20 | 95033 |\n| 108 | 张全蛋    | 男  | 1975-02-10 | 95031 |\n| 109 | 赵铁柱    | 男  | 1974-06-03 | 95031 |\n| 110 | 张飞      | 男  | 1974-06-03 | 95038 |\n+-----+-----------+-----+------------+-------+\n\n-- 只查询性别为男，然后按 class 分组，并限制 class 行大于 1。\nSELECT class FROM student WHERE sex = '男' GROUP BY class HAVING COUNT(*) > 1;\n+-------+\n| class |\n+-------+\n| 95033 |\n| 95031 |\n+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"notlike-模糊查询取反"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#notlike-模糊查询取反","aria-hidden":"true"}},[this._v("#")]),this._v(" NOTLIKE 模糊查询取反")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("student")]),this._v(' 表中不姓 "王" 的同学记录。')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- NOT: 取反\n-- LIKE: 模糊查询\nmysql> SELECT * FROM student WHERE name NOT LIKE '王%';\n+-----+-----------+-----+------------+-------+\n| no  | name      | sex | birthday   | class |\n+-----+-----------+-----+------------+-------+\n| 101 | 曾华      | 男  | 1977-09-01 | 95033 |\n| 102 | 匡明      | 男  | 1975-10-02 | 95031 |\n| 104 | 李军      | 男  | 1976-02-20 | 95033 |\n| 106 | 陆军      | 男  | 1974-06-03 | 95031 |\n| 108 | 张全蛋    | 男  | 1975-02-10 | 95031 |\n| 109 | 赵铁柱    | 男  | 1974-06-03 | 95031 |\n| 110 | 张飞      | 男  | 1974-06-03 | 95038 |\n+-----+-----------+-----+------------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"year-与-now-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#year-与-now-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" YEAR 与 NOW 函数")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("student")]),this._v(" 表中每个学生的姓名和年龄。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 使用函数 YEAR(NOW()) 计算出当前年份，减去出生年份后得出年龄。\nSELECT name, YEAR(NOW()) - YEAR(birthday) as age FROM student;\n+-----------+------+\n| name      | age  |\n+-----------+------+\n| 曾华      |   42 |\n| 匡明      |   44 |\n| 王丽      |   43 |\n| 李军      |   43 |\n| 王芳      |   44 |\n| 陆军      |   45 |\n| 王尼玛    |   43 |\n| 张全蛋    |   44 |\n| 赵铁柱    |   45 |\n| 张飞      |   45 |\n+-----------+------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"max-与-min-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#max-与-min-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" MAX 与 MIN 函数")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询 "),t("code",[this._v("student")]),this._v(" 表中最大和最小的 "),t("code",[this._v("birthday")]),this._v(" 值。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT MAX(birthday), MIN(birthday) FROM student;\n+---------------+---------------+\n| MAX(birthday) | MIN(birthday) |\n+---------------+---------------+\n| 1977-09-01    | 1974-06-03    |\n+---------------+---------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"多段排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多段排序","aria-hidden":"true"}},[this._v("#")]),this._v(" 多段排序")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("以 "),t("code",[this._v("class")]),this._v(" 和 "),t("code",[this._v("birthday")]),this._v(" 从大到小的顺序查询 "),t("code",[this._v("student")]),this._v(" 表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM student ORDER BY class DESC, birthday;\n+-----+-----------+-----+------------+-------+\n| no  | name      | sex | birthday   | class |\n+-----+-----------+-----+------------+-------+\n| 110 | 张飞      | 男  | 1974-06-03 | 95038 |\n| 103 | 王丽      | 女  | 1976-01-23 | 95033 |\n| 104 | 李军      | 男  | 1976-02-20 | 95033 |\n| 107 | 王尼玛    | 男  | 1976-02-20 | 95033 |\n| 101 | 曾华      | 男  | 1977-09-01 | 95033 |\n| 106 | 陆军      | 男  | 1974-06-03 | 95031 |\n| 109 | 赵铁柱    | 男  | 1974-06-03 | 95031 |\n| 105 | 王芳      | 女  | 1975-02-10 | 95031 |\n| 108 | 张全蛋    | 男  | 1975-02-10 | 95031 |\n| 102 | 匡明      | 男  | 1975-10-02 | 95031 |\n+-----+-----------+-----+------------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-5","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 5")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v('查询 "男" 教师及其所上的课程。')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM course WHERE t_no in (SELECT no FROM teacher WHERE sex = '男');\n+-------+--------------+------+\n| no    | name         | t_no |\n+-------+--------------+------+\n| 3-245 | 操作系统     | 804  |\n| 6-166 | 数字电路     | 856  |\n+-------+--------------+------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"max-函数与子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#max-函数与子查询","aria-hidden":"true"}},[this._v("#")]),this._v(" MAX 函数与子查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询最高分同学的 "),t("code",[this._v("score")]),this._v(" 表。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 找出最高成绩（该查询只能有一个结果）\nSELECT MAX(degree) FROM score;\n\n-- 根据上面的条件筛选出所有最高成绩表，\n-- 该查询可能有多个结果，假设 degree 值多次符合条件。\nSELECT * FROM score WHERE degree = (SELECT MAX(degree) FROM score);\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 103  | 3-105 |     92 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-6","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 6")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v('查询和 "李军" 同性别的所有同学 '),t("code",[this._v("name")]),this._v(" 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 首先将李军的性别作为条件取出来\nSELECT sex FROM student WHERE name = '李军';\n+-----+\n| sex |\n+-----+\n| 男  |\n+-----+\n\n-- 根据性别查询 name 和 sex\nSELECT name, sex FROM student WHERE sex = (\n    SELECT sex FROM student WHERE name = '李军'\n);\n+-----------+-----+\n| name      | sex |\n+-----------+-----+\n| 曾华      | 男  |\n| 匡明      | 男  |\n| 李军      | 男  |\n| 陆军      | 男  |\n| 王尼玛    | 男  |\n| 张全蛋    | 男  |\n| 赵铁柱    | 男  |\n| 张飞      | 男  |\n+-----------+-----+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-7","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 7")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v('查询和 "李军" 同性别且同班的同学 '),t("code",[this._v("name")]),this._v(" 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT name, sex, class FROM student WHERE sex = (\n    SELECT sex FROM student WHERE name = '李军'\n) AND class = (\n    SELECT class FROM student WHERE name = '李军'\n);\n+-----------+-----+-------+\n| name      | sex | class |\n+-----------+-----+-------+\n| 曾华      | 男  | 95033 |\n| 李军      | 男  | 95033 |\n| 王尼玛    | 男  | 95033 |\n+-----------+-----+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"子查询-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询-8","aria-hidden":"true"}},[this._v("#")]),this._v(" 子查询 - 8")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v('查询所有选修 "计算机导论" 课程的 "男" 同学成绩表。')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('需要的 "计算机导论" 和性别为 "男" 的编号可以在 '),t("code",[this._v("course")]),this._v(" 和 "),t("code",[this._v("student")]),this._v(" 表中找到。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM score WHERE c_no = (\n    SELECT no FROM course WHERE name = '计算机导论'\n) AND s_no IN (\n    SELECT no FROM student WHERE sex = '男'\n);\n+------+-------+--------+\n| s_no | c_no  | degree |\n+------+-------+--------+\n| 101  | 3-105 |     90 |\n| 102  | 3-105 |     91 |\n| 104  | 3-105 |     89 |\n| 109  | 3-105 |     76 |\n+------+-------+--------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"按等级查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按等级查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 按等级查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("建立一个 "),t("code",[this._v("grade")]),this._v(" 表代表学生的成绩等级，并插入数据：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE TABLE grade (\n    low INT(3),\n    upp INT(3),\n    grade char(1)\n);\n\nINSERT INTO grade VALUES (90, 100, 'A');\nINSERT INTO grade VALUES (80, 89, 'B');\nINSERT INTO grade VALUES (70, 79, 'C');\nINSERT INTO grade VALUES (60, 69, 'D');\nINSERT INTO grade VALUES (0, 59, 'E');\n\nSELECT * FROM grade;\n+------+------+-------+\n| low  | upp  | grade |\n+------+------+-------+\n|   90 |  100 | A     |\n|   80 |   89 | B     |\n|   70 |   79 | C     |\n|   60 |   69 | D     |\n|    0 |   59 | E     |\n+------+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("查询所有学生的 "),t("code",[this._v("s_no")]),this._v(" 、"),t("code",[this._v("c_no")]),this._v(" 和 "),t("code",[this._v("grade")]),this._v(" 列。")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("思路是，使用区间 ( "),n("code",[e._v("BETWEEN")]),e._v(" ) 查询，判断学生的成绩 ( "),n("code",[e._v("degree")]),e._v(" )  在 "),n("code",[e._v("grade")]),e._v(" 表的 "),n("code",[e._v("low")]),e._v(" 和 "),n("code",[e._v("upp")]),e._v(" 之间。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT s_no, c_no, grade FROM score, grade \nWHERE degree BETWEEN low AND upp;\n+------+-------+-------+\n| s_no | c_no  | grade |\n+------+-------+-------+\n| 101  | 3-105 | A     |\n| 102  | 3-105 | A     |\n| 103  | 3-105 | A     |\n| 103  | 3-245 | B     |\n| 103  | 6-166 | B     |\n| 104  | 3-105 | B     |\n| 105  | 3-105 | B     |\n| 105  | 3-245 | C     |\n| 105  | 6-166 | C     |\n| 109  | 3-105 | C     |\n| 109  | 3-245 | D     |\n| 109  | 6-166 | B     |\n+------+-------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 连接查询")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE DATABASE testJoin;\n\nCREATE TABLE person (\n    id INT,\n    name VARCHAR(20),\n    cardId INT\n);\n\nCREATE TABLE card (\n    id INT,\n    name VARCHAR(20)\n);\n\nINSERT INTO card VALUES (1, '饭卡'), (2, '建行卡'), (3, '农行卡'), (4, '工商卡'), (5, '邮政卡');\nSELECT * FROM card;\n+------+-----------+\n| id   | name      |\n+------+-----------+\n|    1 | 饭卡      |\n|    2 | 建行卡    |\n|    3 | 农行卡    |\n|    4 | 工商卡    |\n|    5 | 邮政卡    |\n+------+-----------+\n\nINSERT INTO person VALUES (1, '张三', 1), (2, '李四', 3), (3, '王五', 6);\nSELECT * FROM person;\n+------+--------+--------+\n| id   | name   | cardId |\n+------+--------+--------+\n|    1 | 张三   |      1 |\n|    2 | 李四   |      3 |\n|    3 | 王五   |      6 |\n+------+--------+--------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("分析两张表发现，"),n("code",[e._v("person")]),e._v(" 表并没有为 "),n("code",[e._v("cardId")]),e._v(" 字段设置一个在 "),n("code",[e._v("card")]),e._v(" 表中对应的 "),n("code",[e._v("id")]),e._v(" 外键。如果设置了的话，"),n("code",[e._v("person")]),e._v(" 中 "),n("code",[e._v("cardId")]),e._v(" 字段值为 "),n("code",[e._v("6")]),e._v(" 的行就插不进去，因为该 "),n("code",[e._v("cardId")]),e._v(" 值在 "),n("code",[e._v("card")]),e._v(" 表中并没有。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"内连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接","aria-hidden":"true"}},[this._v("#")]),this._v(" 内连接")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("要查询这两张表中有关系的数据，可以使用 "),t("code",[this._v("INNER JOIN")]),this._v(" ( 内连接 ) 将它们连接在一起。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- INNER JOIN: 表示为内连接，将两张表拼接在一起。\n-- on: 表示要执行某个条件。\nSELECT * FROM person INNER JOIN card on person.cardId = card.id;\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n+------+--------+--------+------+-----------+\n\n-- 将 INNER 关键字省略掉，结果也是一样的。\n-- SELECT * FROM person JOIN card on person.cardId = card.id;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("blockquote",[t("p",[this._v("注意："),t("code",[this._v("card")]),this._v(" 的整张表被连接到了右边。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"左外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#左外连接","aria-hidden":"true"}},[this._v("#")]),this._v(" 左外连接")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("完整显示左边的表 ( "),t("code",[this._v("person")]),this._v(" ) ，右边的表如果符合条件就显示，不符合则补 "),t("code",[this._v("NULL")]),this._v(" 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- LEFT JOIN 也叫做 LEFT OUTER JOIN，用这两种方式的查询结果是一样的。\nSELECT * FROM person LEFT JOIN card on person.cardId = card.id;\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    3 | 王五   |      6 | NULL | NULL      |\n+------+--------+--------+------+-----------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"右外链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#右外链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 右外链接")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("完整显示右边的表 ( "),t("code",[this._v("card")]),this._v(" ) ，左边的表如果符合条件就显示，不符合则补 "),t("code",[this._v("NULL")]),this._v(" 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SELECT * FROM person RIGHT JOIN card on person.cardId = card.id;\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n| NULL | NULL   |   NULL |    2 | 建行卡    |\n| NULL | NULL   |   NULL |    4 | 工商卡    |\n| NULL | NULL   |   NULL |    5 | 邮政卡    |\n+------+--------+--------+------+-----------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"全外链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全外链接","aria-hidden":"true"}},[this._v("#")]),this._v(" 全外链接")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- MySQL 不支持这种语法的全外连接\n-- SELECT * FROM person FULL JOIN card on person.cardId = card.id;\n-- 出现错误：\n-- ERROR 1054 (42S22): Unknown column 'person.cardId' in 'on clause'\n\n-- MySQL全连接语法，使用 UNION 将两张表合并在一起。\nSELECT * FROM person LEFT JOIN card on person.cardId = card.id\nUNION\nSELECT * FROM person RIGHT JOIN card on person.cardId = card.id;\n+------+--------+--------+------+-----------+\n| id   | name   | cardId | id   | name      |\n+------+--------+--------+------+-----------+\n|    1 | 张三   |      1 |    1 | 饭卡      |\n|    2 | 李四   |      3 |    3 | 农行卡    |\n|    3 | 王五   |      6 | NULL | NULL      |\n| NULL | NULL   |   NULL |    2 | 建行卡    |\n| NULL | NULL   |   NULL |    4 | 工商卡    |\n| NULL | NULL   |   NULL |    5 | 邮政卡    |\n+------+--------+--------+------+-----------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务","aria-hidden":"true"}},[this._v("#")]),this._v(" 事务")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 MySQL 中，事务其实是一个最小的不可分割的工作单元。事务能够"),t("strong",[this._v("保证一个业务的完整性")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- a -> -100\nUPDATE user set money = money - 100 WHERE name = 'a';\n\n-- b -> +100\nUPDATE user set money = money + 100 WHERE name = 'b';\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("因此，在执行多条有关联 SQL 语句时，"),t("strong",[this._v("事务")]),this._v("可能会要求这些 SQL 语句要么同时执行成功，要么就都执行失败。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"如何控制事务-commit-rollback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何控制事务-commit-rollback","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何控制事务 - COMMIT / ROLLBACK")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 MySQL 中，事务的"),t("strong",[this._v("自动提交")]),this._v("状态默认是开启的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 查询事务的自动提交状态\nSELECT @@AUTOCOMMIT;\n+--------------+\n| @@AUTOCOMMIT |\n+--------------+\n|            1 |\n+--------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("自动提交的作用")]),this._v("：当我们执行一条 SQL 语句的时候，其产生的效果就会立即体现出来，且不能"),t("strong",[this._v("回滚")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("CREATE DATABASE bank;\n\nUSE bank;\n\nCREATE TABLE user (\n    id INT PRIMARY KEY,\n    name VARCHAR(20),\n    money INT\n);\n\nINSERT INTO user VALUES (1, 'a', 1000);\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("可以看到，在执行插入语句后数据立刻生效，原因是 MySQL 中的事务自动将它"),t("strong",[this._v("提交")]),this._v("到了数据库中。那么所谓"),t("strong",[this._v("回滚")]),this._v("的意思就是，撤销执行过的所有 SQL 语句，使其回滚到"),t("strong",[this._v("最后一次提交")]),this._v("数据时的状态。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在 MySQL 中使用 "),t("code",[this._v("ROLLBACK")]),this._v(" 执行回滚：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 回滚到最后一次提交\nROLLBACK;\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 关闭自动提交\nSET AUTOCOMMIT = 0;\n\n-- 查询自动提交状态\nSELECT @@AUTOCOMMIT;\n+--------------+\n| @@AUTOCOMMIT |\n+--------------+\n|            0 |\n+--------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("INSERT INTO user VALUES (2, 'b', 1000);\n\n-- 关闭 AUTOCOMMIT 后，数据的变化是在一张虚拟的临时数据表中展示，\n-- 发生变化的数据并没有真正插入到数据表中。\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n|  2 | b    |  1000 |\n+----+------+-------+\n\n-- 数据表中的真实数据其实还是：\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\n\n-- 由于数据还没有真正提交，可以使用回滚\nROLLBACK;\n\n-- 再次查询\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("那如何将虚拟的数据真正提交到数据库中？使用 "),t("code",[this._v("COMMIT")]),this._v(" :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("INSERT INTO user VALUES (2, 'b', 1000);\n-- 手动提交数据（持久性），\n-- 将数据真正提交到数据库中，执行后不能再回滚提交过的数据。\nCOMMIT;\n\n-- 提交后测试回滚\nROLLBACK;\n\n-- 再次查询（回滚无效了）\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n|  2 | b    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("blockquote",[n("p",[n("strong",[e._v("总结")])]),n("ol",[n("li",[n("p",[n("strong",[e._v("自动提交")])]),n("ul",[n("li",[n("p",[e._v("查看自动提交状态："),n("code",[e._v("SELECT @@AUTOCOMMIT")]),e._v(" ；")])]),n("li",[n("p",[e._v("设置自动提交状态："),n("code",[e._v("SET AUTOCOMMIT = 0")]),e._v(" 。")])])])]),n("li",[n("p",[n("strong",[e._v("手动提交")])]),n("p",[n("code",[e._v("@@AUTOCOMMIT = 0")]),e._v(" 时，使用 "),n("code",[e._v("COMMIT")]),e._v(" 命令提交事务。")])]),n("li",[n("p",[n("strong",[e._v("事务回滚")])]),n("p",[n("code",[e._v("@@AUTOCOMMIT = 0")]),e._v(" 时，使用 "),n("code",[e._v("ROLLBACK")]),e._v(" 命令回滚事务。")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("事务的实际应用")]),this._v("，让我们再回到银行转账项目：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 转账\nUPDATE user set money = money - 100 WHERE name = 'a';\n\n-- 到账\nUPDATE user set money = money + 100 WHERE name = 'b';\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |   900 |\n|  2 | b    |  1100 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这时假设在转账时发生了意外，就可以使用 "),t("code",[this._v("ROLLBACK")]),this._v(" 回滚到最后一次提交的状态：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 假设转账发生了意外，需要回滚。\nROLLBACK;\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n|  2 | b    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这时我们又回到了发生意外之前的状态，也就是说，事务给我们提供了一个可以反悔的机会。假设数据没有发生意外，这时可以手动将数据真正提交到数据表中："),t("code",[this._v("COMMIT")]),this._v(" 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"手动开启事务-begin-start-transaction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#手动开启事务-begin-start-transaction","aria-hidden":"true"}},[this._v("#")]),this._v(" 手动开启事务 - BEGIN / START TRANSACTION")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("事务的默认提交被开启 ( "),t("code",[this._v("@@AUTOCOMMIT = 1")]),this._v(" ) 后，此时就不能使用事务回滚了。但是我们还可以手动开启一个事务处理事件，使其可以发生回滚：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 使用 BEGIN 或者 START TRANSACTION 手动开启一个事务\n-- START TRANSACTION;\nBEGIN;\nUPDATE user set money = money - 100 WHERE name = 'a';\nUPDATE user set money = money + 100 WHERE name = 'b';\n\n-- 由于手动开启的事务没有开启自动提交，\n-- 此时发生变化的数据仍然是被保存在一张临时表中。\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |   900 |\n|  2 | b    |  1100 |\n+----+------+-------+\n\n-- 测试回滚\nROLLBACK;\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |  1000 |\n|  2 | b    |  1000 |\n+----+------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("仍然使用 "),t("code",[this._v("COMMIT")]),this._v(" 提交数据，提交后无法再发生本次事务的回滚。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("BEGIN;\nUPDATE user set money = money - 100 WHERE name = 'a';\nUPDATE user set money = money + 100 WHERE name = 'b';\n\nSELECT * FROM user;\n+----+------+-------+\n| id | name | money |\n+----+------+-------+\n|  1 | a    |   900 |\n|  2 | b    |  1100 |\n+----+------+-------+\n\n-- 提交数据\nCOMMIT;\n\n-- 测试回滚（无效，因为表的数据已经被提交）\nROLLBACK;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"事务的-acid-特征与使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务的-acid-特征与使用","aria-hidden":"true"}},[this._v("#")]),this._v(" 事务的 ACID 特征与使用")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("事务的四大特征：")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ul",[n("li",[n("strong",[e._v("A 原子性")]),e._v("：事务是最小的单位，不可以再分割；")]),n("li",[n("strong",[e._v("C 一致性")]),e._v("：要求同一事务中的 SQL 语句，必须保证同时成功或者失败；")]),n("li",[n("strong",[e._v("I 隔离性")]),e._v("：事务1 和 事务2 之间是具有隔离性的；")]),n("li",[n("strong",[e._v("D 持久性")]),e._v("：事务一旦结束 ( "),n("code",[e._v("COMMIT")]),e._v(" ) ，就不可以再返回了 ( "),n("code",[e._v("ROLLBACK")]),e._v(" ) 。")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"事务的隔离性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离性","aria-hidden":"true"}},[this._v("#")]),this._v(" 事务的隔离性")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("事务的隔离性可分为四种 ( 性能从低到高 )")]),this._v(" ：")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ol",[n("li",[n("p",[n("strong",[e._v("READ UNCOMMITTED ( 读取未提交 )")])]),n("p",[e._v("如果有多个事务，那么任意事务都可以看见其他事务的"),n("strong",[e._v("未提交数据")]),e._v("。")])]),n("li",[n("p",[n("strong",[e._v("READ COMMITTED ( 读取已提交 )")])]),n("p",[e._v("只能读取到其他事务"),n("strong",[e._v("已经提交的数据")]),e._v("。")])]),n("li",[n("p",[n("strong",[e._v("REPEATABLE READ ( 可被重复读 )")])]),n("p",[e._v("如果有多个连接都开启了事务，那么事务之间不能共享数据记录，否则只能共享已提交的记录。")])]),n("li",[n("p",[n("strong",[e._v("SERIALIZABLE ( 串行化 )")])]),n("p",[e._v("所有的事务都会按照"),n("strong",[e._v("固定顺序执行")]),e._v("，执行完一个事务后再继续执行下一个事务的"),n("strong",[e._v("写入操作")]),e._v("。")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- MySQL 8.x, GLOBAL 表示系统级别，不加表示会话级别。\nSELECT @@GLOBAL.TRANSACTION_ISOLATION;\nSELECT @@TRANSACTION_ISOLATION;\n+--------------------------------+\n| @@GLOBAL.TRANSACTION_ISOLATION |\n+--------------------------------+\n| REPEATABLE-READ                | -- MySQL的默认隔离级别，可以重复读。\n+--------------------------------+\n\n-- MySQL 5.x\nSELECT @@GLOBAL.TX_ISOLATION;\nSELECT @@TX_ISOLATION;\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 设置系统隔离级别，LEVEL 后面表示要设置的隔离级别 (READ UNCOMMITTED)。\nSET GLOBAL TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n-- 查询系统隔离级别，发现已经被修改。\nSELECT @@GLOBAL.TRANSACTION_ISOLATION;\n+--------------------------------+\n| @@GLOBAL.TRANSACTION_ISOLATION |\n+--------------------------------+\n| READ-UNCOMMITTED               |\n+--------------------------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"脏读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脏读","aria-hidden":"true"}},[this._v("#")]),this._v(" 脏读")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("测试 "),t("strong",[this._v("READ UNCOMMITTED ( 读取未提交 )")]),this._v(" 的隔离性：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("INSERT INTO user VALUES (3, '小明', 1000);\nINSERT INTO user VALUES (4, '淘宝店', 1000);\n\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |  1000 |\n|  4 | 淘宝店    |  1000 |\n+----+-----------+-------+\n\n-- 开启一个事务操作数据\n-- 假设小明在淘宝店买了一双800块钱的鞋子：\nSTART TRANSACTION;\nUPDATE user SET money = money - 800 WHERE name = '小明';\nUPDATE user SET money = money + 800 WHERE name = '淘宝店';\n\n-- 然后淘宝店在另一方查询结果，发现钱已到账。\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |   200 |\n|  4 | 淘宝店    |  1800 |\n+----+-----------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("由于小明的转账是在新开启的事务上进行操作的，而该操作的结果是可以被其他事务（另一方的淘宝店）看见的，因此淘宝店的查询结果是正确的，淘宝店确认到账。但就在这时，如果小明在它所处的事务上又执行了 "),t("code",[this._v("ROLLBACK")]),this._v(" 命令，会发生什么？")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 小明所处的事务\nROLLBACK;\n\n-- 此时无论对方是谁，如果再去查询结果就会发现：\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |  1000 |\n|  4 | 淘宝店    |  1000 |\n+----+-----------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这就是所谓的"),t("strong",[this._v("脏读")]),this._v("，一个事务读取到另外一个事务还未提交的数据。这在实际开发中是不允许出现的。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"读取已提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读取已提交","aria-hidden":"true"}},[this._v("#")]),this._v(" 读取已提交")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("把隔离级别设置为 "),t("strong",[this._v("READ COMMITTED")]),this._v(" ：")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SET GLOBAL TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSELECT @@GLOBAL.TRANSACTION_ISOLATION;\n+--------------------------------+\n| @@GLOBAL.TRANSACTION_ISOLATION |\n+--------------------------------+\n| READ-COMMITTED                 |\n+--------------------------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 正在操作数据事务（当前事务）\nSTART TRANSACTION;\nUPDATE user SET money = money - 800 WHERE name = '小明';\nUPDATE user SET money = money + 800 WHERE name = '淘宝店';\n\n-- 虽然隔离级别被设置为了 READ COMMITTED，但在当前事务中，\n-- 它看到的仍然是数据表中临时改变数据，而不是真正提交过的数据。\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |   200 |\n|  4 | 淘宝店    |  1800 |\n+----+-----------+-------+\n\n\n-- 假设此时在远程开启了一个新事务，连接到数据库。\n$ mysql -u root -p12345612\n\n-- 此时远程连接查询到的数据只能是已经提交过的\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |  1000 |\n|  4 | 淘宝店    |  1000 |\n+----+-----------+-------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 小张在查询数据的时候发现：\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |   200 |\n|  4 | 淘宝店    |  1800 |\n+----+-----------+-------+\n\n-- 在小张求表的 money 平均值之前，小王做了一个操作：\nSTART TRANSACTION;\nINSERT INTO user VALUES (5, 'c', 100);\nCOMMIT;\n\n-- 此时表的真实数据是：\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |  1000 |\n|  4 | 淘宝店    |  1000 |\n|  5 | c         |   100 |\n+----+-----------+-------+\n\n-- 这时小张再求平均值的时候，就会出现计算不相符合的情况：\nSELECT AVG(money) FROM user;\n+------------+\n| AVG(money) |\n+------------+\n|  820.0000  |\n+------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("虽然 "),t("strong",[this._v("READ COMMITTED")]),this._v(" 让我们只能读取到其他事务已经提交的数据，但还是会出现问题，就是"),t("strong",[this._v("在读取同一个表的数据时，可能会发生前后不一致的情况。"),t("strong",[this._v("这被称为")]),this._v("不可重复读现象 ( READ COMMITTED )")]),this._v(" 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"幻读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#幻读","aria-hidden":"true"}},[this._v("#")]),this._v(" 幻读")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("将隔离级别设置为 "),t("strong",[this._v("REPEATABLE READ ( 可被重复读取 )")]),this._v(" :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SET GLOBAL TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSELECT @@GLOBAL.TRANSACTION_ISOLATION;\n+--------------------------------+\n| @@GLOBAL.TRANSACTION_ISOLATION |\n+--------------------------------+\n| REPEATABLE-READ                |\n+--------------------------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("测试 "),t("strong",[this._v("REPEATABLE READ")]),this._v(" ，假设在两个不同的连接上分别执行 "),t("code",[this._v("START TRANSACTION")]),this._v(" :")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("-- 小张 - 成都")]),e._v("\n"),n("span",{attrs:{class:"token keyword"}},[e._v("START")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("TRANSACTION")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{attrs:{class:"token keyword"}},[e._v("INSERT")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("user")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("VALUES")]),e._v(" "),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{attrs:{class:"token number"}},[e._v("6")]),n("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{attrs:{class:"token string"}},[e._v("'d'")]),n("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{attrs:{class:"token number"}},[e._v("1000")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{attrs:{class:"token comment"}},[e._v("-- 小王 - 北京")]),e._v("\n"),n("span",{attrs:{class:"token keyword"}},[e._v("START")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("TRANSACTION")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),n("span",{attrs:{class:"token comment"}},[e._v("-- 小张 - 成都")]),e._v("\n"),n("span",{attrs:{class:"token keyword"}},[e._v("COMMIT")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("无论小张是否执行过 "),t("code",[this._v("COMMIT")]),this._v(" ，在小王这边，都不会查询到小张的事务记录，而是只会查询到自己所处事务的记录：")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[e._v("SELECT")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("FROM")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("user")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("+")]),n("span",{attrs:{class:"token comment"}},[e._v("----+-----------+-------+")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" id "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" name      "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" money "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("+")]),n("span",{attrs:{class:"token comment"}},[e._v("----+-----------+-------+")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("1")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" a         "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),n("span",{attrs:{class:"token number"}},[e._v("900")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("2")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" b         "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("1100")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("3")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" 小明      "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("4")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" 淘宝店    "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("1000")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("  "),n("span",{attrs:{class:"token number"}},[e._v("5")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v(" c         "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("   "),n("span",{attrs:{class:"token number"}},[e._v("100")]),e._v(" "),n("span",{attrs:{class:"token operator"}},[e._v("|")]),e._v("\n"),n("span",{attrs:{class:"token operator"}},[e._v("+")]),n("span",{attrs:{class:"token comment"}},[e._v("----+-----------+-------+")]),e._v("\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("这是"),t("strong",[this._v("因为小王在此之前开启了一个新的事务 ( "),t("code",[this._v("START TRANSACTION")]),this._v(" ) "),t("strong",[this._v("，那么")]),this._v("在他的这条新事务的线上，跟其他事务是没有联系的")]),this._v("，也就是说，此时如果其他事务正在操作数据，它是不知道的。")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[e._v("INSERT")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("INTO")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("user")]),e._v(" "),n("span",{attrs:{class:"token keyword"}},[e._v("VALUES")]),e._v(" "),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{attrs:{class:"token number"}},[e._v("6")]),n("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{attrs:{class:"token string"}},[e._v("'d'")]),n("span",{attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),n("span",{attrs:{class:"token number"}},[e._v("1000")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{attrs:{class:"token comment"}},[e._v("-- ERROR 1062 (23000): Duplicate entry '6' for key 'PRIMARY'")]),e._v("\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("报错了，操作被告知已存在主键为 "),t("code",[this._v("6")]),this._v(" 的字段。这种现象也被称为"),t("strong",[this._v("幻读，一个事务提交的数据，不能被其他事务读取到")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"串行化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#串行化","aria-hidden":"true"}},[this._v("#")]),this._v(" 串行化")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("顾名思义，就是所有事务的"),t("strong",[this._v("写入操作")]),this._v("全都是串行化的。什么意思？把隔离级别修改成 "),t("strong",[this._v("SERIALIZABLE")]),this._v(" :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("SET GLOBAL TRANSACTION ISOLATION LEVEL SERIALIZABLE;\nSELECT @@GLOBAL.TRANSACTION_ISOLATION;\n+--------------------------------+\n| @@GLOBAL.TRANSACTION_ISOLATION |\n+--------------------------------+\n| SERIALIZABLE                   |\n+--------------------------------+\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("-- 小张 - 成都\nSTART TRANSACTION;\n\n-- 小王 - 北京\nSTART TRANSACTION;\n\n-- 开启事务之前先查询表，准备操作数据。\nSELECT * FROM user;\n+----+-----------+-------+\n| id | name      | money |\n+----+-----------+-------+\n|  1 | a         |   900 |\n|  2 | b         |  1100 |\n|  3 | 小明      |  1000 |\n|  4 | 淘宝店    |  1000 |\n|  5 | c         |   100 |\n|  6 | d         |  1000 |\n+----+-----------+-------+\n\n-- 发现没有 7 号王小花，于是插入一条数据：\nINSERT INTO user VALUES (7, '王小花', 1000);\n")])])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("此时会发生什么呢？由于现在的隔离级别是 "),n("strong",[e._v("SERIALIZABLE ( 串行化 )")]),e._v(" ，串行化的意思就是：假设把所有的事务都放在一个串行的队列中，那么所有的事务都会按照"),n("strong",[e._v("固定顺序执行")]),e._v("，执行完一个事务后再继续执行下一个事务的"),n("strong",[e._v("写入操作")]),e._v(" ( "),n("strong",[e._v("这意味着队列中同时只能执行一个事务的写入操作")]),e._v(" ) 。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("根据这个解释，小王在插入数据时，会出现等待状态，直到小张执行 "),t("code",[this._v("COMMIT")]),this._v(" 结束它所处的事务，或者出现等待超时。")])}],!1,null,null,null);t.default=r.exports}}]);